"",
"")
# Create the vals vector
vals <- c(
nrow(dat),
nrow(dat[dat$Cycle == "2016-2017", ]),
nrow(dat[dat$Cycle == "2017-2018", ]),
nrow(dat[dat$Cycle == "2018-2019", ]),
nrow(dat[dat$Cycle == "2019-2020", ]),
"",
paste(nrow(dat[dat$Age=="17-22",]), "(60.0%)"),
paste(nrow(dat[dat$Age=="23-27",]), "(28.3%)"),
paste(nrow(dat[dat$Age=="28-75",]), "(11.6%)"),
mean_ci_table$`Avg. # of Applications`,
mean_ci_table$`Mean Undergrad. GPA`,
mean_ci_table$`Mean CSD GPA`,
median_table[6, 2],
median_table[7, 2],
median_table[8, 2],
# Remove space after the first parenthesis
count_percents[1, 2],
count_percents[3, 2],
count_percents[2, 2],
count_percents[4, 2],
count_percents[6, 2],
median_table[1, 2],
count_percents[7, 2],
median_table[2, 2],
count_percents[8, 2],
median_table[3, 2],
count_percents[9, 2],
median_table[4, 2],
count_percents[10, 2],
median_table[5, 2],
count_percents[5, 2]
)
summary_table <- data.frame(vars,as.character(vals))
colnames(summary_table) <- c("Variable", "", "Value")
summary_table <- data.frame(vars,vars1,as.character(vals))
colnames(summary_table) <- c("Variable", "", "Value")
View(summary_table)
vars <- c("# Total Applicants",
"",
"",
"",
"",
"Age",
"",
"",
"",
"Avg. # Applications",
"Mean Undergrad GPA",
"Mean CSD GPA",
"Median GRE Analytical Percentile",
"Median GRE Quant. Percentile",
"Median GRE Verbal Percentile",
"# First Gen.", "# Racial / Ethnic Minority",
"# Low SES",
"# Polylinguistic ",
"# Previous Employmnet",
"",
"# Previous Extracurricular",
"",
"# Previous Leadership",
"",
"# Previous Research",
"",
"# Previous Volunteering",
"",
"# Offers")
vars1 <- c("",
"2016-2017",
"2017-2018",
"2018-2019",
"2019-2020",
"",
"17-22",
"23-27",
"28-75",
"",
"",
"",
"",
"",
"",
"",
"",
"",
"",
"",
"Median Emp. Hours",
"",
"Median Extra. Hours",
"",
"Median Leadership Hours",
"",
"Median Research Hours",
"",
"Median Volunteer Hours",
""
)
# Create the vals vector
vals <- c(
nrow(dat),
nrow(dat[dat$Cycle == "2016-2017", ]),
nrow(dat[dat$Cycle == "2017-2018", ]),
nrow(dat[dat$Cycle == "2018-2019", ]),
nrow(dat[dat$Cycle == "2019-2020", ]),
"",
paste(nrow(dat[dat$Age=="17-22",]), "(60.0%)"),
paste(nrow(dat[dat$Age=="23-27",]), "(28.3%)"),
paste(nrow(dat[dat$Age=="28-75",]), "(11.6%)"),
mean_ci_table$`Avg. # of Applications`,
mean_ci_table$`Mean Undergrad. GPA`,
mean_ci_table$`Mean CSD GPA`,
median_table[6, 2],
median_table[7, 2],
median_table[8, 2],
# Remove space after the first parenthesis
count_percents[1, 2],
count_percents[3, 2],
count_percents[2, 2],
count_percents[4, 2],
count_percents[6, 2],
median_table[1, 2],
count_percents[7, 2],
median_table[2, 2],
count_percents[8, 2],
median_table[3, 2],
count_percents[9, 2],
median_table[4, 2],
count_percents[10, 2],
median_table[5, 2],
count_percents[5, 2]
)
summary_table <- data.frame(vars,vars1,as.character(vals))
colnames(summary_table) <- c("Variable", "", "Value")
View(summary_table)
View(mean_ci_table)
dat <- rename(dat, low.ses = `https://protect-us.mimecast.com/s/Iv9CCzpNQKfRXDnOHV5Xk9?domain=low.ses`)
dat <- rename(dat, low.ses = `https://protect-us.mimecast.com/s/Iv9CCzpNQKfRXDnOHV5Xk9?domain=low.ses`)
knitr::opts_chunk$set(echo = TRUE)
# libraries
library(readr) # read in data
library(ggplot2) # plotting
library(tidyverse) # data manipulation / cleaning
library(lme4) # mixed effects modeling
library(kableExtra) # for tables
# set wd
setwd("~/Desktop/EIM-Consulting-SLP-Admissions")
# read in data
dat <- read_csv("EIM Consulting Project - SLP Admissions/CSDCAS-Open-Data-Initiative-v1.csv")
dat <- rename(dat, low.ses = `https://protect-us.mimecast.com/s/Iv9CCzpNQKfRXDnOHV5Xk9?domain=low.ses`)
dat <- dat %>% mutate(Cycle = factor(Cycle,levels=c("2016-2017","2017-2018","2018-2019","2019-2020")),
Age = factor(Age,levels=c("17-22","23-27","28-75")),
First.Generation = ifelse(First.Generation=="Yes",1,
ifelse(First.Generation=="No",0,NA_real_)),
low.ses = ifelse(low.ses=="Yes",1,
ifelse(low.ses=="No",0,NA_real_)),
RacialEthnic.Minority = ifelse(RacialEthnic.Minority=="Yes",1,
ifelse(RacialEthnic.Minority=="No",0,NA_real_)),
Multiple.Languages = ifelse(Multiple.Languages=="Yes",1,
ifelse(Multiple.Languages=="No",0,NA_real_)),
grad.experience = ifelse(!is.na(GPA.Graduate),1,0),
post.bac.experience = ifelse(!is.na(GPA.PostBaccalaureate),1,0),
gpa.csd.overall_diff = GPA.CSD - GPA.Undergraduate,
prev.emp = ifelse(Employment.Activities>0,1,0),
prev.extracurricular = ifelse(Extracurricular.Activities>0,1,0),
prev.leadership = ifelse(Leadership.Activities>0,1,0),
prev.research = ifelse(Research.Activities>0,1,0),
prev.volunteer = ifelse(Volunteer.Activities>0,1,0)
)
# generate subsets
post_16_17_dat <- dat %>% filter(Cycle != "2016-2017") # not 2016-2017 application cycle
offer_dat <- post_16_17_dat %>% filter(Offer==1) # not 2016-2017 applicants who had at least 1 offer
offer_dat <- dat %>% filter(Offer==1) # at least 1 offer for all admissions cycles
## Making summary table ##
# getting count data with percentages
count_percents <- dat[, c(4:7, 40, 44:48)] %>%
summarise(across(everything(),
list(count = ~sum(., na.rm = TRUE),
percent = ~mean(., na.rm = TRUE) * 100))) %>%
pivot_longer(everything(), names_to = c("Variable", ".value"), names_sep = "_") %>%
mutate(Combined = paste0(count, " (", round(percent, 1), "%)"),
Variable = c("First Gen.","Low SES", "Racial / Ethnic Minority", "Polylinguistic", "Received at least 1 Offer", "Previous Employment", "Previous Extracurriculars", "Previous Leadership", "Previous Research", "Previous Volunteering")) %>%
select(Variable, Combined)
# means for appropriate fields
colnames(mean_ci_table) <- c("Avg. # of Applications", "Mean CSD GPA", "Mean Undergrad. GPA")
# medians for appropriate fields
median_table <- dat %>%
summarise(
`Median Emp. Hours` = ifelse(sum(prev.emp != 0) > 0, median(Employment.Hours[prev.emp != 0], na.rm = TRUE), NA),
`Median Extra. Hours` = ifelse(sum(prev.extracurricular != 0) > 0, median(Extracurricular.Hours[prev.extracurricular != 0], na.rm = TRUE), NA),
`Median Leaderhsip Hours` = ifelse(sum(prev.leadership != 0) > 0, median(Leadership.Hours[prev.leadership != 0], na.rm = TRUE), NA),
`Median Research Hours` = ifelse(sum(prev.research != 0) > 0, median(Research.Hours[prev.research != 0], na.rm = TRUE), NA),
`Median Volunteer Hours` = ifelse(sum(prev.volunteer != 0) > 0, median(Volunteer.Hours[prev.volunteer != 0], na.rm = TRUE), NA),
`Median GRE Analytical Percentile` = median(GRE.Analytical,na.rm=TRUE),
`Median GRE Quant. Percentile` = median(GRE.Quantitative,na.rm=TRUE),
`Median GRE Verbal Percentile` = median(GRE.Verbal,na.rm=TRUE)
)  %>% pivot_longer(everything(), names_to = "Variable", values_to = "Median")
# combine all data
vars <- c("# Total Applicants",
"",
"",
"",
"",
"Age",
"",
"",
"",
"Avg. # Applications",
"Mean Undergrad GPA",
"Mean CSD GPA",
"Median GRE Analytical Percentile",
"Median GRE Quant. Percentile",
"Median GRE Verbal Percentile",
"# First Gen.", "# Racial / Ethnic Minority",
"# Low SES",
"# Polylinguistic ",
"# Previous Employmnet",
"",
"# Previous Extracurricular",
"",
"# Previous Leadership",
"",
"# Previous Research",
"",
"# Previous Volunteering",
"",
"# Offers")
vars1 <- c("",
"2016-2017",
"2017-2018",
"2018-2019",
"2019-2020",
"",
"17-22",
"23-27",
"28-75",
"",
"",
"",
"",
"",
"",
"",
"",
"",
"",
"",
"Median Emp. Hours",
"",
"Median Extra. Hours",
"",
"Median Leadership Hours",
"",
"Median Research Hours",
"",
"Median Volunteer Hours",
""
)
# Create the vals vector
vals <- c(
nrow(dat),
nrow(dat[dat$Cycle == "2016-2017", ]),
nrow(dat[dat$Cycle == "2017-2018", ]),
nrow(dat[dat$Cycle == "2018-2019", ]),
nrow(dat[dat$Cycle == "2019-2020", ]),
"",
paste(nrow(dat[dat$Age=="17-22",]), "(60.0%)"),
paste(nrow(dat[dat$Age=="23-27",]), "(28.3%)"),
paste(nrow(dat[dat$Age=="28-75",]), "(11.6%)"),
paste("3.59 (3.56, 3.62)"),
paste("3.5 (3.49, 3.5)"),
paste("3.62 (3.62, 3.63)"),
median_table[6, 2],
median_table[7, 2],
median_table[8, 2],
# Remove space after the first parenthesis
count_percents[1, 2],
count_percents[3, 2],
count_percents[2, 2],
count_percents[4, 2],
count_percents[6, 2],
median_table[1, 2],
count_percents[7, 2],
median_table[2, 2],
count_percents[8, 2],
median_table[3, 2],
count_percents[9, 2],
median_table[4, 2],
count_percents[10, 2],
median_table[5, 2],
count_percents[5, 2]
)
summary_table <- data.frame(vars,vars1,as.character(vals))
colnames(summary_table) <- c("Variable", "", "Value")
kbl(summary_table)
# note that 'first generation' and 'low.ses' were not measured for the 2016-2017 & 2017-2018
# 'CSD': Communicative Sciences and Disorders
# Do SLP programs still require GRE?
# I assume geographic data was not acquired?
# Are all the 'decision' variables measured in the # of schools?
# Need to plot race, economic status, multiple languages, and first gen in relation to the entire cohort, as well as the number of offers received
# in two column charts, plot the % of students that are "yes" to any of these categories in relation to all students who did not respond NA, then the % of them who received offers.
# Function to calculate percentages
calculate_percentages <- function(x) {
total <- length(x)
yes_count <- sum(x == 1)
no_count <- sum(x == 0)
data.frame(
Response = c("Yes", "No"),
Percentage = c((yes_count / total) * 100, (no_count / total) * 100)
)
}
# Calculate percentages for var1 and var2
percent_first_gen <- calculate_percentages(post_16_17_dat$First.Generation)
percent_first_gen$Variable <- "Applicants"
percent_offered_first_gen <- calculate_percentages(offer_dat$First.Generation)
percent_offered_first_gen$Variable <- "Offers"
# Combine the results into one data frame
percentages <- rbind(percent_first_gen, percent_offered_first_gen)
percentages$Response <- factor(percentages$Response, levels=c("Yes","No"))
percentages$Response <- ifelse(percentages$Response=="Yes","First Gen", "Not First Gen.")
# Create the bar plot
ggplot(percentages, aes(x = Variable, y = Percentage, fill = Response)) +
geom_bar(stat = "identity", position = "stack", width = 0.7) +
labs(title = "Percentage of First Gen. Applicants and Offers",
x = "",
y = "Percentage",
fill = "First Gen. Status") +
theme_minimal() +  theme(
plot.title = element_text(hjust = 0.5),  # Center the title
axis.title.x = element_text(margin = margin(t = 20))  # Move the x-axis label down
) + scale_fill_brewer(palette = "Set2")
# Calculate percentages for var1 and var2
percent_low_ses <- calculate_percentages(post_16_17_dat$low.ses)
percent_low_ses$Variable <- "Applicants"
percent_offered_low_ses <- calculate_percentages(offer_dat$low.ses)
percent_offered_low_ses$Variable <- "Offers"
# Combine the results into one data frame
percentages <- rbind(percent_low_ses, percent_offered_low_ses)
percentages$Response <- factor(percentages$Response, levels=c("Yes","No"))
percentages$Response <- ifelse(percentages$Response=="Yes","Low SES", "Not Low SES")
# Create the bar plot
ggplot(percentages, aes(x = Variable, y = Percentage, fill = Response)) +
geom_bar(stat = "identity", position = "stack", width = 0.7) +
labs(title = "Percentage of Low SES Applicants and Offers",
x = "",
y = "Percentage",
fill = "First Gen. Status") +
theme_minimal() +  theme(
plot.title = element_text(hjust = 0.5),  # Center the title
axis.title.x = element_text(margin = margin(t = 20))  # Move the x-axis label down
) + scale_fill_brewer(palette = "Set2")
# Calculate percentages for var1 and var2
percent_minority <- calculate_percentages(dat$RacialEthnic.Minority)
percent_minority$Variable <- "Applicants"
percent_offered_minority <- calculate_percentages(offer_dat$RacialEthnic.Minority)
percent_offered_minority$Variable <- "Offers"
# Combine the results into one data frame
percentages <- rbind(percent_minority, percent_offered_minority)
percentages$Response <- factor(percentages$Response, levels=c("Yes","No"))
percentages$Response <- ifelse(percentages$Response=="Yes","Racial / Ethnic Minority", "Non- Racial / Ethnic Minority")
# Create the bar plot
ggplot(percentages, aes(x = Variable, y = Percentage, fill = Response)) +
geom_bar(stat = "identity", position = "stack", width = 0.7) +
labs(title = "Percentage of Racial / Ethnic Minority Applicants and Offers",
x = "",
y = "Percentage",
fill = "Racial / Ethnic Minority Status") +
theme_minimal() +  theme(
plot.title = element_text(hjust = 0.5),  # Center the title
axis.title.x = element_text(margin = margin(t = 20))  # Move the x-axis label down
) + scale_fill_brewer(palette = "Set2")
# Calculate percentages for var1 and var2
percent_poly <- calculate_percentages(dat$Multiple.Languages)
percent_poly$Variable <- "Applicants"
percent_offered_poly <- calculate_percentages(offer_dat$Multiple.Languages)
percent_offered_poly$Variable <- "Offers"
# Combine the results into one data frame
percentages <- rbind(percent_poly, percent_offered_poly)
percentages$Response <- factor(percentages$Response, levels=c("Yes","No"))
percentages$Response <- ifelse(percentages$Response=="Yes","Polylinguistic", "Monolinguistic")
# Create the bar plot
ggplot(percentages, aes(x = Variable, y = Percentage, fill = Response)) +
geom_bar(stat = "identity", position = "stack", width = 0.7) +
labs(title = "Percentage of Polylinguistic Applicants and Offers",
x = "",
y = "Percentage",
fill = "Polylinguism Status") +
theme_minimal() +  theme(
plot.title = element_text(hjust = 0.5),  # Center the title
axis.title.x = element_text(margin = margin(t = 20))  # Move the x-axis label down
) + scale_fill_brewer(palette = "Set2")
mod1 <- glm(Offer ~ First.Generation + low.ses + RacialEthnic.Minority + Multiple.Languages, data = dat, family = binomial, na.action = na.omit) # dispersion parameter is 1.0002, so we stick with the binomial family
deviance(mod1)
mod2 <- glm(Offer ~ First.Generation * low.ses + RacialEthnic.Minority + Multiple.Languages, data = dat, family = binomial, na.action = na.omit)
deviance(mod2)
mod3 <- glm(Offer ~ First.Generation *  RacialEthnic.Minority + low.ses + Multiple.Languages, data = dat, family = binomial, na.action = na.omit)
deviance(mod3)
mod4 <- glm(Offer ~ First.Generation *  Multiple.Languages + RacialEthnic.Minority + low.ses, data = dat, family = binomial, na.action = na.omit)
deviance(mod4) # smallest deviance
summary(mod4)
mod5 <- glm(Offer ~ First.Generation + low.ses * RacialEthnic.Minority + Multiple.Languages, data = dat, family = binomial, na.action = na.omit)
deviance(mod5)
mod6 <- glm(Offer ~ First.Generation + low.ses * Multiple.Languages + RacialEthnic.Minority, data = dat, family = binomial, na.action = na.omit)
deviance(mod6)
mod7 <- glm(Offer ~ First.Generation + low.ses + RacialEthnic.Minority * Multiple.Languages, data = dat, family = binomial, na.action = na.omit)
deviance(mod7)
mod8 <- glm(Offer ~ (First.Generation * low.ses * RacialEthnic.Minority) + Multiple.Languages, data = dat, family = binomial, na.action = na.omit)
mod9 <- glm(Offer ~ GPA.Undergraduate + First.Generation + low.ses + RacialEthnic.Minority + Multiple.Languages, data = dat, family = binomial, na.action = na.omit)
## seems like multiple languages is just a proxy for the three other variables since it fails to be significant one taken into consideration with other variables, while those variable still remain significant.
# Need to plot race, economic status, multiple languages, and first gen in relation to the entire cohort, as well as the number of offers received
# in two column charts, plot the % of students that are "yes" to any of these categories in relation to all students who did not respond NA, then the % of them who received offers.
dat %>% filter(!is.na(First.Generation)) %>% group_by(First.Generation) %>% summarize(n = n(),
pct = n/29412,
offers = sum(Offer),
pct_offer = offers / 20388
)
ggplot(dat[!is.na(dat$First.Generation),],aes(x=factor(First.Generation),y=Offer,fill=factor(First.Generation))) + geom_col(width=0.5) + labs + theme_minimal(title="Number of Offers by First-Gen Status",ylab = "Total # of Offers", ) + scale_fill_brewer(palette = "Set2")
mod1 <- glm(Offer ~ First.Generation + low.ses + RacialEthnic.Minority + Multiple.Languages, data = dat, family = binomial, na.action = na.omit) # dispersion parameter is 1.0002, so we stick with the binomial family
# deviance(mod1)
mod2 <- glm(Offer ~ First.Generation * low.ses + RacialEthnic.Minority + Multiple.Languages, data = dat, family = binomial, na.action = na.omit)
# deviance(mod2)
mod3 <- glm(Offer ~ First.Generation *  RacialEthnic.Minority + low.ses + Multiple.Languages, data = dat, family = binomial, na.action = na.omit)
# deviance(mod3)
mod4 <- glm(Offer ~ First.Generation *  Multiple.Languages + RacialEthnic.Minority + low.ses, data = dat, family = binomial, na.action = na.omit)
deviance(mod4) # smallest deviance
# summary(mod4)
mod5 <- glm(Offer ~ First.Generation + low.ses * RacialEthnic.Minority + Multiple.Languages, data = dat, family = binomial, na.action = na.omit)
# deviance(mod5)
mod6 <- glm(Offer ~ First.Generation + low.ses * Multiple.Languages + RacialEthnic.Minority, data = dat, family = binomial, na.action = na.omit)
# deviance(mod6)
mod7 <- glm(Offer ~ First.Generation + low.ses + RacialEthnic.Minority * Multiple.Languages, data = dat, family = binomial, na.action = na.omit)
# deviance(mod7)
mod8 <- glm(Offer ~ (First.Generation * low.ses * RacialEthnic.Minority) + Multiple.Languages, data = dat, family = binomial, na.action = na.omit)
mod9 <- glm(Offer ~ GPA.Undergraduate + First.Generation + low.ses + RacialEthnic.Minority + Multiple.Languages, data = dat, family = binomial, na.action = na.omit)
## seems like multiple languages is just a proxy for the three other variables since it fails to be significant one taken into consideration with other variables, while those variable still remain significant.
dat <- rename(dat, low.ses = `https://protect-us.mimecast.com/s/Iv9CCzpNQKfRXDnOHV5Xk9?domain=low.ses`)
View(post_16_17_dat)
# Calculate percentages for var1 and var2
percent_first_gen <- calculate_percentages(post_16_17_dat$First.Generation)
View(percent_first_gen)
percent_first_gen$Variable <- "Applicants"
View(percent_first_gen)
percent_offered_first_gen <- calculate_percentages(offer_dat$First.Generation)
percent_offered_first_gen$Variable <- "Offers"
View(percent_offered_first_gen)
offer_dat_not_16_17 <- post_16_17_dat %>% filter(Offer==1) # not 2016-2017 applicants who had at least 1 offer
# Calculate percentages for var1 and var2
percent_low_ses <- calculate_percentages(post_16_17_dat$low.ses)
percent_low_ses$Variable <- "Applicants"
percent_offered_low_ses <- calculate_percentages(offer_dat_not_16_17$low.ses)
percent_offered_low_ses$Variable <- "Offers"
# Combine the results into one data frame
percentages <- rbind(percent_low_ses, percent_offered_low_ses)
percentages$Response <- factor(percentages$Response, levels=c("Yes","No"))
percentages$Response <- ifelse(percentages$Response=="Yes","Low SES", "Not Low SES")
# Create the bar plot
ggplot(percentages, aes(x = Variable, y = Percentage, fill = Response)) +
geom_bar(stat = "identity", position = "stack", width = 0.7) +
labs(title = "Percentage of Low SES Applicants and Offers",
x = "",
y = "Percentage",
fill = "First Gen. Status") +
theme_minimal() +  theme(
plot.title = element_text(hjust = 0.5),  # Center the title
axis.title.x = element_text(margin = margin(t = 20))  # Move the x-axis label down
) + scale_fill_brewer(palette = "Set2")
# Need to plot race, economic status, multiple languages, and first gen in relation to the entire cohort, as well as the number of offers received
# in two column charts, plot the % of students that are "yes" to any of these categories in relation to all students who did not respond NA, then the % of them who received offers.
# Function to calculate percentages
calculate_percentages <- function(x) {
total <- length(x)
yes_count <- sum(x == 1)
no_count <- sum(x == 0)
data.frame(
Response = c("Yes", "No"),
Percentage = c((yes_count / total) * 100, (no_count / total) * 100)
)
}
# Calculate percentages for var1 and var2
percent_first_gen <- calculate_percentages(post_16_17_dat$First.Generation)
percent_first_gen$Variable <- "Applicants"
percent_offered_first_gen <- calculate_percentages(offer_dat_not_16_17$First.Generation)
percent_offered_first_gen$Variable <- "Offers"
# Combine the results into one data frame
percentages <- rbind(percent_first_gen, percent_offered_first_gen)
percentages$Response <- factor(percentages$Response, levels=c("Yes","No"))
percentages$Response <- ifelse(percentages$Response=="Yes","First Gen", "Not First Gen.")
# Create the bar plot
ggplot(percentages, aes(x = Variable, y = Percentage, fill = Response)) +
geom_bar(stat = "identity", position = "stack", width = 0.7) +
labs(title = "Percentage of First Gen. Applicants and Offers",
x = "",
y = "Percentage",
fill = "First Gen. Status") +
theme_minimal() +  theme(
plot.title = element_text(hjust = 0.5),  # Center the title
axis.title.x = element_text(margin = margin(t = 20))  # Move the x-axis label down
) + scale_fill_brewer(palette = "Set2")
kbl(summary_table) %>%
kable_styling("striped", position = "center", full_width = F)  %>%
row_spec(0, bold = TRUE) %>%
row_spec(5, hline_after = TRUE) %>%
row_spec(9, hline_after = TRUE)
View(percent_poly)
kbl(summary_table) %>%
kable_styling(bootstrap_options = "striped", position = "center", full_width = F)
View(percentages)
library(kableExtra) # for tables
