First.Generation = ifelse(First.Generation=="Yes",1,
ifelse(First.Generation=="No",0,NA_real_)),
low.ses = ifelse(low.ses=="Yes",1,
ifelse(low.ses=="No",0,NA_real_)),
RacialEthnic.Minority = ifelse(RacialEthnic.Minority=="Yes",1,
ifelse(RacialEthnic.Minority=="No",0,NA_real_)),
Multiple.Languages = ifelse(Multiple.Languages=="Yes",1,
ifelse(Multiple.Languages=="No",0,NA_real_)),
grad.experience = ifelse(!is.na(GPA.Graduate),1,0),
post.bac.experience = ifelse(!is.na(GPA.PostBaccalaureate),1,0),
gpa.csd.overall_diff = GPA.CSD - GPA.Undergraduate,
prev.emp = ifelse(Employment.Activities>0,1,0),
prev.extracurricular = ifelse(Extracurricular.Activities>0,1,0),
prev.leadership = ifelse(Leadership.Activities>0,1,0),
prev.research = ifelse(Research.Activities>0,1,0),
prev.volunteer = ifelse(Volunteer.Activities>0,1,0)
)
# generate subsets
post_16_17_dat <- dat %>% filter(Cycle != "2016-2017") # not 2016-2017 application cycle
offer_dat_not_16_17 <- post_16_17_dat %>% filter(Offer==1) # not 2016-2017 applicants who had at least 1 offer
offer_dat <- dat %>% filter(Offer==1) # at least 1 offer for all admissions cycles
## Making summary table ##
# getting count data with percentages
count_percents <- dat[, c(4:7, 40, 44:48)] %>%
summarise(across(everything(),
list(count = ~sum(., na.rm = TRUE),
percent = ~mean(., na.rm = TRUE) * 100))) %>%
pivot_longer(everything(), names_to = c("Variable", ".value"), names_sep = "_") %>%
mutate(Combined = paste0(count, " (", round(percent, 1), "%)"),
Variable = c("First Gen.","Low SES", "Racial / Ethnic Minority", "Polylinguistic", "Received at least 1 Offer", "Previous Employment", "Previous Extracurriculars", "Previous Leadership", "Previous Research", "Previous Volunteering")) %>% select(Variable, Combined)
count_percents <- dat[, c(4:7, 40, 44:48)] %>%
summarise(across(everything(),
list(count = ~sum(., na.rm = TRUE),
percent = ~mean(., na.rm = TRUE) * 100))) %>%
pivot_longer(everything(), names_to = c("Variable", ".value"), names_sep = "_") %>%
mutate(Combined = paste0(count, " (", round(percent, 1), "%)"),
Variable = c("First Gen.","Low SES", "Racial / Ethnic Minority", "Polylinguistic", "Received at least 1 Offer", "Previous Employment", "Previous Extracurriculars", "Previous Leadership", "Previous Research", "Previous Volunteering"))
View(count_percents)
## Replicase Tree for LG+I+F+G4
setwd("~/Desktop/ViralAncestral/Results_Fall_2024/Replicase_Gene/LG+F+I+G4")
muscle_lg_rep_aa_ires1 <- read.tree("./ires1_REP_AA_with_outgroup_aligned.fasta.treefile")
library(phytools)
muscle_lg_rep_aa_ires1 <- read.tree("./ires1_REP_AA_with_outgroup_aligned.fasta.treefile")
muscle_lg_rep_aa_ires1$tip.label
muscle_lg_rep_aa_ires1_rooted <- root(muscle_lg_rep_aa_ires1, outgroup = "Ophiostoma_mitovirus_4_", node.lables = "support")
write.tree(muscle_lg_rep_aa_ires1_rooted , file="./muscle_lg_rep_aa_ires1_rooted.treefile")
knitr::opts_chunk$set(echo = TRUE)
# libraries
library(readr) # read in data
library(ggplot2) # plotting
library(tidyverse) # data manipulation / cleaning
library(lme4) # mixed effects modeling
library(kableExtra) # for tables
library(MASS) # best subset regression
library(bestglm) # best subset regression
# set wd
setwd("~/Desktop/EIM-Consulting-SLP-Admissions")
# read in data
dat <- read_csv("EIM Consulting Project - SLP Admissions/CSDCAS-Open-Data-Initiative-v1.csv")
linesep <- function(x,y=character()){
if(!length(x))
return(y)
linesep(x[-length(x)],c(rep('',x[length(x)]-1),'\\addlinespace',y))
}
dat <- rename(dat, low.ses = `https://protect-us.mimecast.com/s/Iv9CCzpNQKfRXDnOHV5Xk9?domain=low.ses`)
dat <- dat %>% mutate(Cycle = factor(Cycle,levels=c("2016-2017","2017-2018","2018-2019","2019-2020")),
Age = factor(Age,levels=c("17-22","23-27","28-75")),
First.Generation = ifelse(First.Generation=="Yes",1,
ifelse(First.Generation=="No",0,NA_real_)),
low.ses = ifelse(low.ses=="Yes",1,
ifelse(low.ses=="No",0,NA_real_)),
RacialEthnic.Minority = ifelse(RacialEthnic.Minority=="Yes",1,
ifelse(RacialEthnic.Minority=="No",0,NA_real_)),
Multiple.Languages = ifelse(Multiple.Languages=="Yes",1,
ifelse(Multiple.Languages=="No",0,NA_real_)),
grad.experience = ifelse(!is.na(GPA.Graduate),1,0),
post.bac.experience = ifelse(!is.na(GPA.PostBaccalaureate),1,0),
gpa.csd.overall_diff = GPA.CSD - GPA.Undergraduate,
prev.emp = ifelse(Employment.Activities>0,1,0),
prev.extracurricular = ifelse(Extracurricular.Activities>0,1,0),
prev.leadership = ifelse(Leadership.Activities>0,1,0),
prev.research = ifelse(Research.Activities>0,1,0),
prev.volunteer = ifelse(Volunteer.Activities>0,1,0)
)
# generate subsets
post_16_17_dat <- dat %>% filter(Cycle != "2016-2017") # not 2016-2017 application cycle
offer_dat_not_16_17 <- post_16_17_dat %>% filter(Offer==1) # not 2016-2017 applicants who had at least 1 offer
offer_dat <- dat %>% filter(Offer==1) # at least 1 offer for all admissions cycles
## Making summary table ##
# getting count data with percentages
count_percents <- dat[, c(4:7, 40, 44:48)] %>%
summarise(across(everything(),
list(count = ~sum(., na.rm = TRUE),
percent = ~mean(., na.rm = TRUE) * 100))) %>%
pivot_longer(everything(), names_to = c("Variable", ".value"), names_sep = "_") %>%
mutate(Combined = paste0(count, " (", round(percent, 1), "%)"),
Variable = c("First Gen.","Low SES", "Racial / Ethnic Minority", "Polylinguistic", "Received at least 1 Offer", "Previous Employment", "Previous Extracurriculars", "Previous Leadership", "Previous Research", "Previous Volunteering"))
count_percents <- count_percents[,c(1,4)]
# medians for appropriate fields
median_table <- dat %>%
summarise(
`Median Emp. Hours` = ifelse(sum(prev.emp != 0) > 0, median(Employment.Hours[prev.emp != 0], na.rm = TRUE), NA),
`Median Extra. Hours` = ifelse(sum(prev.extracurricular != 0) > 0, median(Extracurricular.Hours[prev.extracurricular != 0], na.rm = TRUE), NA),
`Median Leaderhsip Hours` = ifelse(sum(prev.leadership != 0) > 0, median(Leadership.Hours[prev.leadership != 0], na.rm = TRUE), NA),
`Median Research Hours` = ifelse(sum(prev.research != 0) > 0, median(Research.Hours[prev.research != 0], na.rm = TRUE), NA),
`Median Volunteer Hours` = ifelse(sum(prev.volunteer != 0) > 0, median(Volunteer.Hours[prev.volunteer != 0], na.rm = TRUE), NA),
`Median GRE Analytical Percentile` = median(GRE.Analytical,na.rm=TRUE),
`Median GRE Quant. Percentile` = median(GRE.Quantitative,na.rm=TRUE),
`Median GRE Verbal Percentile` = median(GRE.Verbal,na.rm=TRUE)
)  %>% pivot_longer(everything(), names_to = "Variable", values_to = "Median")
# combine all data
vars <- c("# Total Applicants",
"",
"",
"",
"",
"Age",
"",
"",
"Avg. # Applications",
"Mean Undergrad GPA",
"Mean CSD GPA",
"Median GRE Analytical Percentile",
"Median GRE Quant. Percentile",
"Median GRE Verbal Percentile",
"# First Gen.", "# Racial / Ethnic Minority",
"# Low SES",
"# Polylinguistic ",
"# Previous Employmnet",
"",
"# Previous Extracurricular",
"",
"# Previous Leadership",
"",
"# Previous Research",
"",
"# Previous Volunteering",
"",
"# Offers")
vars1 <- c("",
"2016-2017",
"2017-2018",
"2018-2019",
"2019-2020",
"17-22",
"23-27",
"28-75",
"",
"",
"",
"",
"",
"",
"",
"",
"",
"",
"",
"Median Emp. Hours",
"",
"Median Extra. Hours",
"",
"Median Leadership Hours",
"",
"Median Research Hours",
"",
"Median Volunteer Hours",
""
)
# Create the vals vector
vals <- c(
nrow(dat),
nrow(dat[dat$Cycle == "2016-2017", ]),
nrow(dat[dat$Cycle == "2017-2018", ]),
nrow(dat[dat$Cycle == "2018-2019", ]),
nrow(dat[dat$Cycle == "2019-2020", ]),
paste(nrow(dat[dat$Age=="17-22",]), "(60.0%)"),
paste(nrow(dat[dat$Age=="23-27",]), "(28.3%)"),
paste(nrow(dat[dat$Age=="28-75",]), "(11.6%)"),
paste("3.59 (3.56, 3.62)"),
paste("3.5 (3.49, 3.5)"),
paste("3.62 (3.62, 3.63)"),
median_table[6, 2],
median_table[7, 2],
median_table[8, 2],
# Remove space after the first parenthesis
count_percents[1, 2],
count_percents[3, 2],
count_percents[2, 2],
count_percents[4, 2],
count_percents[6, 2],
median_table[1, 2],
count_percents[7, 2],
median_table[2, 2],
count_percents[8, 2],
median_table[3, 2],
count_percents[9, 2],
median_table[4, 2],
count_percents[10, 2],
median_table[5, 2],
count_percents[5, 2]
)
summary_table <- data.frame(vars,vars1,as.character(vals))
colnames(summary_table) <- c("Variable", "", "Value")
kbl(summary_table,booktabs = T, linesep = linesep(c(1,5,8,14,18,28)),caption = "Overall SLP Graduate Applicant Overview") %>%
kable_styling(full_width=FALSE, position = "center", latex_options = "hold_position",bootstrap_options = c("striped", "hover", "condensed")) %>% row_spec(1,hline_after = TRUE) %>%
row_spec(5,hline_after = TRUE) %>%
row_spec(8,hline_after=TRUE) %>%
row_spec(14,hline_after = TRUE) %>%
row_spec(18,hline_after=TRUE) %>%
row_spec(28,hline_after=TRUE)
# note that 'first generation' and 'low.ses' were not measured for the 2016-2017 & 2017-2018
# 'CSD': Communicative Sciences and Disorders
# Do SLP programs still require GRE?
# I assume geographic data was not acquired?
# Are all the 'decision' variables measured in the # of schools?
# Need to plot race, economic status, multiple languages, and first gen in relation to the entire cohort, as well as the number of offers received
# in two column charts, plot the % of students that are "yes" to any of these categories in relation to all students who did not respond NA, then the % of them who received offers.
# Function to calculate percentages
calculate_percentages <- function(x) {
total <- length(x)
yes_count <- sum(x == 1)
no_count <- sum(x == 0)
data.frame(
Response = c("Yes", "No"),
Percentage = c((yes_count / total) * 100, (no_count / total) * 100)
)
}
# Calculate percentages for var1 and var2
percent_first_gen <- calculate_percentages(post_16_17_dat$First.Generation)
percent_first_gen$Variable <- "Applicants"
percent_offered_first_gen <- calculate_percentages(offer_dat_not_16_17$First.Generation)
percent_offered_first_gen$Variable <- "Offers"
# Combine the results into one data frame
percentages <- rbind(percent_first_gen, percent_offered_first_gen)
percentages$Response <- factor(percentages$Response, levels=c("Yes","No"))
percentages$Response <- ifelse(percentages$Response=="Yes","First Gen", "Not First Gen.")
# Create the bar plot
ggplot(percentages, aes(x = Variable, y = Percentage, fill = Response)) +
geom_bar(stat = "identity", position = "stack", width = 0.7) +
labs(title = "Percentage of First Gen. Applicants and Offers",
x = "",
y = "Percentage",
fill = "First Gen. Status") +
theme_minimal() +  theme(
plot.title = element_text(hjust = 0.5),  # Center the title
axis.title.x = element_text(margin = margin(t = 20))  # Move the x-axis label down
) + scale_fill_brewer(palette = "Set2")
# Calculate percentages for var1 and var2
percent_low_ses <- calculate_percentages(post_16_17_dat$low.ses)
percent_low_ses$Variable <- "Applicants"
percent_offered_low_ses <- calculate_percentages(offer_dat_not_16_17$low.ses)
percent_offered_low_ses$Variable <- "Offers"
# Combine the results into one data frame
percentages <- rbind(percent_low_ses, percent_offered_low_ses)
percentages$Response <- factor(percentages$Response, levels=c("Yes","No"))
percentages$Response <- ifelse(percentages$Response=="Yes","Low SES", "Not Low SES")
# Create the bar plot
ggplot(percentages, aes(x = Variable, y = Percentage, fill = Response)) +
geom_bar(stat = "identity", position = "stack", width = 0.7) +
labs(title = "Percentage of Low SES Applicants and Offers",
x = "",
y = "Percentage",
fill = "First Gen. Status") +
theme_minimal() +  theme(
plot.title = element_text(hjust = 0.5),  # Center the title
axis.title.x = element_text(margin = margin(t = 20))  # Move the x-axis label down
) + scale_fill_brewer(palette = "Set2")
# Calculate percentages for var1 and var2
percent_minority <- calculate_percentages(dat$RacialEthnic.Minority)
percent_minority$Variable <- "Applicants"
percent_offered_minority <- calculate_percentages(offer_dat$RacialEthnic.Minority)
percent_offered_minority$Variable <- "Offers"
# Combine the results into one data frame
percentages <- rbind(percent_minority, percent_offered_minority)
percentages$Response <- factor(percentages$Response, levels=c("Yes","No"))
percentages$Response <- ifelse(percentages$Response=="Yes","Racial / Ethnic Minority", "Non- Racial / Ethnic Minority")
# Create the bar plot
ggplot(percentages, aes(x = Variable, y = Percentage, fill = Response)) +
geom_bar(stat = "identity", position = "stack", width = 0.7) +
labs(title = "Percentage of Racial / Ethnic Minority Applicants and Offers",
x = "",
y = "Percentage",
fill = "Racial / Ethnic Minority Status") +
theme_minimal() +  theme(
plot.title = element_text(hjust = 0.5,size=11),
legend.text = element_text(size = 8),  # Adjust legend font size
legend.title = element_text(size = 10),# Center the title
axis.title.x = element_text(margin = margin(t = 20))) + scale_fill_brewer(palette = "Set2")
# Calculate percentages for var1 and var2
percent_poly <- calculate_percentages(dat$Multiple.Languages)
percent_poly$Variable <- "Applicants"
percent_offered_poly <- calculate_percentages(offer_dat$Multiple.Languages)
percent_offered_poly$Variable <- "Offers"
# Combine the results into one data frame
percentages <- rbind(percent_poly, percent_offered_poly)
percentages$Response <- factor(percentages$Response, levels=c("Yes","No"))
percentages$Response <- ifelse(percentages$Response=="Yes","Polylinguistic", "Monolinguistic")
# Create the bar plot
ggplot(percentages, aes(x = Variable, y = Percentage, fill = Response)) +
geom_bar(stat = "identity", position = "stack", width = 0.7) +
labs(title = "Percentage of Polylinguistic Applicants and Offers",
x = "",
y = "Percentage",
fill = "Polylinguism Status") +
theme_minimal() +  theme(
plot.title = element_text(hjust = 0.5),  # Center the title
axis.title.x = element_text(margin = margin(t = 20))  # Move the x-axis label down
) + scale_fill_brewer(palette = "Set2")
mod1 <- glm(Offer ~ First.Generation + low.ses + RacialEthnic.Minority + Multiple.Languages, data = dat, family = binomial, na.action = na.omit) # dispersion parameter is 1.0002, so we stick with the binomial family
# deviance(mod1)
mod1_vars <- c("2.84***", "0.79***", "0.87***", "0.57***", "1.13**","","","","","","","", "36267 (29411)", "35686 (29407)")
mod2 <- glm(Offer ~ First.Generation * low.ses + RacialEthnic.Minority + Multiple.Languages, data = dat, family = binomial, na.action = na.omit)
# deviance(mod2)
mod2_vars <- c("2.86***","0.74***","0.84***","0.57***","1.13**","1.14*","","","","","","", "36267 (26411)", "35682 (29406)")
mod3 <- glm(Offer ~ First.Generation *  RacialEthnic.Minority + low.ses + Multiple.Languages, data = dat, family = binomial, na.action = na.omit)
# deviance(mod3)
mod3_vars <- c("2.85***","0.77***","0.86***","0.56***","1.13**","","1.06","","","","","", "36267 (29411)","35683 (29406)")
mod4 <- glm(Offer ~ First.Generation *  Multiple.Languages + RacialEthnic.Minority + low.ses, data = dat, family = binomial, na.action = na.omit)
# deviance(mod4) # smallest deviance
mod4_vars <- c("2.86***","0.76***","0.86***","0.57***","1.06","","","1.23*","","","","", "36267 (29411)", "35680 (29406)")
mod5 <- glm(Offer ~ First.Generation + low.ses * RacialEthnic.Minority + Multiple.Languages, data = dat, family = binomial, na.action = na.omit)
# deviance(mod5)
mod5_vars <- c("2.83***","0.79***","0.87***","0.57***","1.13**","","","","0.98","","","","36267 (26411)", "35686 (29406)")
mod6 <- glm(Offer ~ First.Generation + low.ses * Multiple.Languages + RacialEthnic.Minority, data = dat, family = binomial, na.action = na.omit)
# deviance(mod6)
mod6_vars <- c("2.85***","0.79***","0.85***","0.57***","1.09","","","","","1.10","","","36267 (29411)", "35685 (29406)")
mod7 <- glm(Offer ~ First.Generation + low.ses + RacialEthnic.Minority * Multiple.Languages, data = dat, family = binomial, na.action = na.omit)
# deviance(mod7)
mod7_vars <- c("2.85***","0.79***","0.86***","0.56***","1.05","","","","","","1.14","","36267 (29411)", "35684 (29406)")
mod8 <- glm(Offer ~ (First.Generation * low.ses * RacialEthnic.Minority) + Multiple.Languages, data = dat, family = binomial, na.action = na.omit)
mod8_vars <- c("2.85***","0.73***","0.85***","0.57***","1.13**","1.15","1.07","", "0.95", "","","0.97", "36267 (29411)", "35681 (29403)")
rq1_summary_table <- data.frame(mod1_vars,mod2_vars,mod3_vars,mod4_vars,mod5_vars,mod6_vars,mod7_vars,mod8_vars)
rownames(rq1_summary_table)<- c("Intercept","First Gen.", "Low SES", "Racial/Ethnic Minority", "Bi/Multi-linguistic","First Gen. * Low SES", "First Gen. * Racial/Ethnic Minority", "First Gen. * Bi/Multi-linguistic","Low SES * Racial/Ethnic Minority","Low SES * Bi/Multi-linguistic","Racial/Ethnic Minority * Bi/Multi-linguistic","First Gen * Los SES * Racial / Ethnic Minority","Null Deviance (df)","Residual Deviance (df)")
colnames(rq1_summary_table) <- c("Model 1", "Model 2", "Model 3", "Model 4", "Model 5", "Model 6", "Model 7", "Model 8")
kbl(rq1_summary_table, row.names = TRUE, booktabs = T, linesep = linesep(c(12,14)),caption = "Change in Admissions Odds for Socioeconomic Factors") %>%
kable_styling(full_width=FALSE, position = "center", latex_options = "hold_position",bootstrap_options = c("striped", "hover", "condensed"),font_size = 8) %>% row_spec(1,hline_after = TRUE) %>%
row_spec(12,hline_after = TRUE) %>%
kableExtra::landscape() %>% footnote(general = "The noted significance levels are < 0.001 (***), 0.001 (**), and 0.05 (*)")
# create composite academic variables
dat$gpa_comp = mean(dat$GPA.Undergraduate,dat$GPA.CSD,na.rm=TRUE)
class(dat$GPA.CSD)
class(dat$GPA.Undergraduate)
# create composite academic variables
dat$gpa_comp <- rowMeans(dat[,c("GPA.Undergraduate","GPA.CSD")],na.rm=TRUE)
summary(dat$gpa_comp)
sum(is.na(dat$GPA.CSD))
sum(is.na(dat$GPA.Undergraduate))
View(dat)
colSums(is.na(dat))
dat$gre_comp <- rowMeans(dat[,c("GRE.Analytical","GRE.Verbal","GRE.Quantitative",na.rm=TRUE)])
dat$gre_comp <- rowMeans(dat[,c("GRE.Analytical","GRE.Verbal","GRE.Quantitative"],na.rm=TRUE)
dat$gre_comp <- rowMeans(dat[,c("GRE.Analytical","GRE.Verbal","GRE.Quantitative")],na.rm=TRUE)
summary(dat$gre_comp)
colnames(dat)
base_mod <- glm(Offer ~ gpa_comp + gre_comp + First.Generation + low.ses + RacialEthnic.Minority + Multiple.Languages, data = dat, family = "binomial")
summary(base_mod)
base_mod <- glm(Offer ~ gpa_comp + gre_comp + First.Generation + low.ses + RacialEthnic.Minority + Multiple.Languages, data = dat, family = "quasibinomial")
summary(base_mod)
base_mod <- glm(Offer ~ gpa_comp + gre_comp + First.Generation + low.ses + RacialEthnic.Minority + Multiple.Languages, data = dat, family = "binomial")
summary(base_mod)
summary(base_mod)
csd_mod <- glm(Offer ~ GPA.CSD + gre_comp + First.Generation + low.ses + RacialEthnic.Minority + Multiple.Languages, data = dat, family = "binomial")
summary(csd_mod)
AIC(base_mod)
AIC(csd_mod)
# using undergrad GPA; AIC =
undergrad_mod <- glm(Offer ~ GPA.Undergraduate + gre_comp + First.Generation + low.ses + RacialEthnic.Minority + Multiple.Languages, data = dat, family = "binomial")
AIC(undergrad_mod)
# using analytical GRE
analytical_mod <- glm(Offer ~ gpa_comp + GRE.Analytical + First.Generation + low.ses + RacialEthnic.Minority + Multiple.Languages, data = dat, family = "binomial")
AIC(analytical_mod)
# using verbal GRE;
verbal_mod <- glm(Offer ~ gpa_comp + GRE.Verbal + First.Generation + low.ses + RacialEthnic.Minority + Multiple.Languages, data = dat, family = "binomial")
AIC(verbal_mod)
# using quantitative GRE;
verbal_mod <- glm(Offer ~ gpa_comp + GRE.Quantitative + First.Generation + low.ses + RacialEthnic.Minority + Multiple.Languages, data = dat, family = "binomial")
# using quantitative GRE;
quant_mod <- glm(Offer ~ gpa_comp + GRE.Quantitative + First.Generation + low.ses + RacialEthnic.Minority + Multiple.Languages, data = dat, family = "binomial")
# using verbal GRE; AIC = 23755.87
verbal_mod <- glm(Offer ~ gpa_comp + GRE.Verbal + First.Generation + low.ses + RacialEthnic.Minority + Multiple.Languages, data = dat, family = "binomial")
AIC(quant_mod)
deviance(quant_mod)
deviance(verbal_mod)
deviance(analytical_mod)
deviance(undergrad_mod)
deviance(csd_mod)
deviance(base_mod)
summary(base_mod)
summary(csd_mod)
csd_fg_mod <- glm(Offer ~ GPA.CSD * First.Generation + gre_comp  + RacialEthnic.Minority , data = dat, family = "binomial")
summary(csd_fg_mod)
summary(csd_fg_mod)
# GPA CSD * minority;
csd_rem_mod <- glm(Offer ~ GPA.CSD * RacialEthnic.Minority  + First.Generation + gre_comp, data = dat, family = "binomial")
summary(csd_rem_mod)
# GRE + First Gen;
gre_fg_mod <- glm(Offer ~ GPA.CSD + First.Generation * gre_comp  + RacialEthnic.Minority , data = dat, family = "binomial")
summary(gre_fg_mod)
# GRE + Racial / Ethnic Minority
csd_rem_mod <- glm(Offer ~ GPA.CSD + RacialEthnic.Minority * gre_comp + First.Generation, data = dat, family = "binomial")
# GRE + Racial / Ethnic Minority
gre_rem_mod <- glm(Offer ~ GPA.CSD + RacialEthnic.Minority * gre_comp + First.Generation, data = dat, family = "binomial")
# GPA CSD * minority; AIC = 22760; deviance = 22748
csd_rem_mod <- glm(Offer ~ GPA.CSD * RacialEthnic.Minority  + First.Generation + gre_comp, data = dat, family = "binomial")
summary(gre_rem_mod)
# GPA CSD * minority; AIC = 22760; deviance = 22748 --> best model
csd_rem_mod <- glm(Offer ~ GPA.CSD * RacialEthnic.Minority  + First.Generation + gre_comp, data = dat, family = "binomial")
summary(csd_rem_mod)
exp(csd_rem_mod$coefficients)
9.9523224590*0.7076332180
# create composite academic variables
dat$gpa_comp <- rowMeans(dat[,c("GPA.Undergraduate","GPA.CSD")],na.rm=TRUE)
dat$gre_comp <- rowMeans(dat[,c("GRE.Analytical","GRE.Verbal","GRE.Quantitative")],na.rm=TRUE)
# base model; AIC = 23438; deviance = 23424
base_mod <- glm(Offer ~ gpa_comp + gre_comp + First.Generation + low.ses + RacialEthnic.Minority + Multiple.Languages, data = dat, family = "binomial")
# using CSD GPA; AIC = 22772.25; deviance = 22758.25
csd_mod <- glm(Offer ~ GPA.CSD + gre_comp + First.Generation + low.ses + RacialEthnic.Minority + Multiple.Languages, data = dat, family = "binomial")
# using undergrad GPA; AIC = 23858.65; deviance = 23844.65
undergrad_mod <- glm(Offer ~ GPA.Undergraduate + gre_comp + First.Generation + low.ses + RacialEthnic.Minority + Multiple.Languages, data = dat, family = "binomial")
# using analytical GRE; AIC = 23526.57; deviance = 23512.57
analytical_mod <- glm(Offer ~ gpa_comp + GRE.Analytical + First.Generation + low.ses + RacialEthnic.Minority + Multiple.Languages, data = dat, family = "binomial")
# using verbal GRE; AIC = 23755.87; deviance = 23741.87
verbal_mod <- glm(Offer ~ gpa_comp + GRE.Verbal + First.Generation + low.ses + RacialEthnic.Minority + Multiple.Languages, data = dat, family = "binomial")
# using quantitative GRE; AIC = 23627.14; deviance = 23613.14
quant_mod <- glm(Offer ~ gpa_comp + GRE.Quantitative + First.Generation + low.ses + RacialEthnic.Minority + Multiple.Languages, data = dat, family = "binomial")
# GPA CSD * First Gen; AIC = 22770; deviance = 22758
csd_fg_mod <- glm(Offer ~ GPA.CSD * First.Generation + gre_comp  + RacialEthnic.Minority , data = dat, family = "binomial")
# GPA CSD * minority; AIC = 22760; deviance = 22748 --> best model
csd_rem_mod <- glm(Offer ~ GPA.CSD * RacialEthnic.Minority  + First.Generation + gre_comp, data = dat, family = "binomial")
# GRE + First Gen; AIC = 22771; deviance = 22759
gre_fg_mod <- glm(Offer ~ GPA.CSD + First.Generation * gre_comp  + RacialEthnic.Minority , data = dat, family = "binomial")
# GRE + Racial / Ethnic Minority; AIC = 22771, deviance = 22759
gre_rem_mod <- glm(Offer ~ GPA.CSD + RacialEthnic.Minority * gre_comp + First.Generation, data = dat, family = "binomial")
base_exp_coefs <- exp(base_mod$coefficients)
base_exp_coefs <- round(exp(base_mod$coefficients),2)
# need to make a table of base mod, csd mod, and csd*minority status
base_exp_coefs <- round(exp(base_mod$coefficients),2)
csd_exp_coefs <- round(exp(csd_mod$coefficients),2)
csd_rem_exp_coefs <- roudn(exp(csd_rem_mod$coefficients),2)
csd_rem_exp_coefs <- round(exp(csd_rem_mod$coefficients),2)
length(base_exp_coefs)
length(csd_exp_coefs)
length(csd_rem_exp_coefs)
summary(base_mod)
paste(base_exp_coefs[1],"***")
exp(-10.226181)
base_exp_coefs
vars <- c("Intercept","Composite GPA", "CSD GPA", "Composite GRE", "First Gen.", "Low SES", "Racial / Ethnic Minority", "Bi / Multi-lingual", "Racial/Ethnic Minority * CSD GPA", "AIC", "Residual Deviance (df)")
length(vars)
base <- c("< 0.001 ***",paste(base_exp_coefs[2],"***"),"-", paste(base_exp_coefs[3],"***"),paste(base_exp_coefs[4]),paste(base_exp_coefs[6]),paste(base_exp_coefs[4]),round(AIC(base_mod)),"23424 (24635)")
length(base)
base <- c("< 0.001 ***",paste(base_exp_coefs[2],"***"),"-", paste(base_exp_coefs[3],"***"),paste(base_exp_coefs[4]),paste(base_exp_coefs[5]), paste(base_exp_coefs[6]),paste(base_exp_coefs[7]),"",round(AIC(base_mod)),"23424 (24635)")
length(base)
summary(csd_mod)
csd_exp_coefs
csd <- c("< 0.001 ***","-", paste(csd_exp_coefs[2],"***"), paste(csd_exp_coefs[3],"***"),paste(csd_exp_coefs[4]),paste(csd_exp_coefs[5]), paste(csd_exp_coefs[6]),paste(csd_exp_coefs[7]),"",round(AIC(csd_mod)),"22758 (23497)")
length(csd)
summary(csd_rem_exp_coefs)
summary(csd_rem_mod)
csd_rem_exp_coefs
vars
csd_rem <- c("< 0.001 ***","-", paste(csd_rem_exp_coefs[2],"***"), paste(csd_rem_exp_coefs[5],"***"),paste(csd_rem_exp_coefs[4],"*"),"",paste(csd_rem_exp_coefs[3]),"", paste(csd_exp_coefs[6],"***"),round(AIC(ccsd_rem__mod)),"22748 (23498)")
csd_rem <- c("< 0.001 ***","-", paste(csd_rem_exp_coefs[2],"***"), paste(csd_rem_exp_coefs[5],"***"),paste(csd_rem_exp_coefs[4],"*"),"",paste(csd_rem_exp_coefs[3]),"", paste(csd_exp_coefs[6],"***"),round(AIC(ccsd_rem_mod)),"22748 (23498)")
csd_rem <- c("< 0.001 ***","-", paste(csd_rem_exp_coefs[2],"***"), paste(csd_rem_exp_coefs[5],"***"),paste(csd_rem_exp_coefs[4],"*"),"",paste(csd_rem_exp_coefs[3]),"", paste(csd_exp_coefs[6],"***"),round(AIC(csd_rem_mod)),"22748 (23498)")
rq2_table <- data.frame(vars,bsae,csd,csd_rem)
rq2_table <- data.frame(vars,base,csd,csd_rem)
View(rq2_table)
vars <- c("Intercept","Composite GPA", "CSD GPA", "Composite GRE", "First Gen.", "Low SES", "Racial / Ethnic Minority", "Bi / Multi-lingual", "Racial/Ethnic Minority * CSD GPA", "AIC", "Residual Deviance (df)")
base <- c("< 0.001 ***",paste(base_exp_coefs[2],"***"),"-", paste(base_exp_coefs[3],"***"),paste(base_exp_coefs[4]),paste(base_exp_coefs[5]), paste(base_exp_coefs[6]),paste(base_exp_coefs[7]),"",round(AIC(base_mod)),"23424 (24635)")
csd <- c("< 0.001 ***","-", paste(csd_exp_coefs[2],"***"), paste(csd_exp_coefs[3],"***"),paste(csd_exp_coefs[4],"*"),paste(csd_exp_coefs[5]), paste(csd_exp_coefs[6],"***"),paste(csd_exp_coefs[7]),"",round(AIC(csd_mod)),"22758 (23497)")
csd_rem <- c("< 0.001 ***","-", paste(csd_rem_exp_coefs[2],"***"), paste(csd_rem_exp_coefs[5],"*"),paste(csd_rem_exp_coefs[4],"***"),"",paste(csd_rem_exp_coefs[3],"***"),"", paste(csd_exp_coefs[6],"***"),round(AIC(csd_rem_mod)),"22748 (23498)")
rq2_table <- data.frame(vars,base,csd,csd_rem)
View(rq2_table)
vars <- c("Intercept","Composite GPA", "CSD GPA", "Composite GRE", "First Gen.", "Low SES", "Racial / Ethnic Minority", "Bi / Multi-lingual", "Racial/Ethnic Minority * CSD GPA", "AIC", "Residual Deviance (df)")
base <- c("< 0.001 ***",paste(base_exp_coefs[2],"***"),"-", paste(base_exp_coefs[3],"***"),paste(base_exp_coefs[4]),paste(base_exp_coefs[5]), paste(base_exp_coefs[6]),paste(base_exp_coefs[7]),"",round(AIC(base_mod)),"23424 (24635)")
csd <- c("< 0.001 ***","-", paste(csd_exp_coefs[2],"***"), paste(csd_exp_coefs[3],"***"),paste(csd_exp_coefs[4],"*"),paste(csd_exp_coefs[5]), paste(csd_exp_coefs[6],"***"),paste(csd_exp_coefs[7]),"",round(AIC(csd_mod)),"22758 (23497)")
csd_rem <- c("< 0.001 ***","-", paste(csd_rem_exp_coefs[2],"***"), paste(csd_rem_exp_coefs[5],"*"),paste(csd_rem_exp_coefs[4],"***"),"-",paste(csd_rem_exp_coefs[3],"***"),"-", paste(csd_exp_coefs[6],"***"),round(AIC(csd_rem_mod)),"22748 (23498)")
rq2_table <- data.frame(vars,base,csd,csd_rem)
View(rq2_table)
vars <- c("Intercept","Composite GPA", "CSD GPA", "Composite GRE", "First Gen.", "Low SES", "Racial / Ethnic Minority", "Bi / Multi-lingual", "Racial/Ethnic Minority * CSD GPA", "AIC", "Residual Deviance (df)")
base <- c("< 0.001 ***",paste(base_exp_coefs[2],"***"),"-", paste(base_exp_coefs[3],"***"),paste(base_exp_coefs[4]),paste(base_exp_coefs[5]), paste(base_exp_coefs[6]),paste(base_exp_coefs[7]),"",round(AIC(base_mod)),"23424 (24635)")
csd <- c("< 0.001 ***","-", paste(csd_exp_coefs[2],"***"), paste(csd_exp_coefs[3],"***"),paste(csd_exp_coefs[4],"*"),paste(csd_exp_coefs[5]), paste(csd_exp_coefs[6],"***"),paste(csd_exp_coefs[7]),"-",round(AIC(csd_mod)),"22758 (23497)")
csd_rem <- c("< 0.001 ***","-", paste(csd_rem_exp_coefs[2],"***"), paste(csd_rem_exp_coefs[5],"*"),paste(csd_rem_exp_coefs[4],"***"),"-",paste(csd_rem_exp_coefs[3],"***"),"-", paste(csd_exp_coefs[6],"***"),round(AIC(csd_rem_mod)),"22748 (23498)")
rq2_table <- data.frame(vars,base,csd,csd_rem)
View(rq2_table)
vars <- c("Intercept","Composite GPA", "CSD GPA", "Composite GRE", "First Gen.", "Low SES", "Racial / Ethnic Minority", "Bi / Multi-lingual", "Racial/Ethnic Minority * CSD GPA", "AIC", "Residual Deviance (df)")
base <- c("< 0.001 ***",paste(base_exp_coefs[2],"***"),"-", paste(base_exp_coefs[3],"***"),paste(base_exp_coefs[4]),paste(base_exp_coefs[5]), paste(base_exp_coefs[6]),paste(base_exp_coefs[7]),"-",round(AIC(base_mod)),"23424 (24635)")
csd <- c("< 0.001 ***","-", paste(csd_exp_coefs[2],"***"), paste(csd_exp_coefs[3],"***"),paste(csd_exp_coefs[4],"*"),paste(csd_exp_coefs[5]), paste(csd_exp_coefs[6],"***"),paste(csd_exp_coefs[7]),"-",round(AIC(csd_mod)),"22758 (23497)")
csd_rem <- c("< 0.001 ***","-", paste(csd_rem_exp_coefs[2],"***"), paste(csd_rem_exp_coefs[5],"*"),paste(csd_rem_exp_coefs[4],"***"),"-",paste(csd_rem_exp_coefs[3],"***"),"-", paste(csd_exp_coefs[6],"***"),round(AIC(csd_rem_mod)),"22748 (23498)")
rq2_table <- data.frame(vars,base,csd,csd_rem)
View(rq2_table)
rq2_table <- data.frame(vars,base,csd,csd_rem)
colnames(rq2_table) <- c("Base Model", "Model 1", "Model 2")
kbl(rq2_table, row.names = TRUE, booktabs = T, linesep = linesep(c(12,14)),caption = "Change in Admissions Odds for Socioeconomic Factors") %>%
kable_styling(full_width=FALSE, position = "center", latex_options = "hold_position",bootstrap_options = c("striped", "hover", "condensed"),font_size = 8) %>% row_spec(1,hline_after = TRUE) %>%
row_spec(12,hline_after = TRUE) %>%
kableExtra::landscape() %>% footnote(general = "The noted significance levels are < 0.001 (***), 0.001 (**), and 0.05 (*)")
View(rq2_table)
kbl(rq2_table, row.names = TRUE, booktabs = T, linesep = linesep(c(9)),caption = "Change in Admissions Odds") %>%
kable_styling(full_width=FALSE, position = "center", latex_options = "hold_position",bootstrap_options = c("striped", "hover", "condensed"),font_size = 8) %>% row_spec(1,hline_after = TRUE) %>%
row_spec(9,hline_after = TRUE) %>%
kableExtra::landscape() %>% footnote(general = "The noted significance levels are < 0.001 (***), 0.001 (**), and 0.05 (*).  The values presented have been transformed from the raw output such that a value above 1 indicates an increase in odds, and value below 1 indicates a decrease in odds, and a value of 1 indicates no change in odds.")
kbl(rq2_table, row.names = FALSE, booktabs = T, linesep = linesep(c(9)),caption = "Change in Admissions Odds") %>%
kable_styling(full_width=FALSE,position = "center", latex_options = c("hold_position","scale_down"),bootstrap_options = c("striped", "hover", "condensed"),font_size = 8) %>%
column_spec(1, width = "1.2in") %>%
column_spec(2, width = "0.5in") %>%
column_spec(3, width = "0.5in") %>%
column_spec(4, width = "0.5in") %>%
row_spec(1,hline_after = TRUE) %>%
row_spec(9,hline_after = TRUE) %>%
footnote(general = "The noted significance levels are < 0.001 (***), 0.001 (**), and 0.05 (*).  The values presented have been transformed from the raw output such that a value above 1 indicates an increase in odds, and value below 1 indicates a decrease in odds, and a value of 1 indicates no change in odds.")
