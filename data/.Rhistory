ifelse(x == 2, 1, 0)
})
# Impute NA values as 0 since we are deeming it to be an "unsure" response
total_pre[, 44:55][is.na(total_pre[, 44:55])] <- 0
# get scores
total_pre$npq_pre_score <- rowSums(total_pre[,c(44:55)])
## HCPairs (score 15 - 105) ##
# impute missing values with middle value
for (col in 56:70) {
col_med <- median(total_pre[, col], na.rm = TRUE)  # Calculate column mean, ignoring NA values
total_pre[is.na(total_pre[, col]), col] <- col_med  # Replace NA values with column mean
}
# get scores
total_pre$hc_pre_score <- rowSums(total_pre[,c(56:70)])
# make summary table for scores
Value <- c("7.42 [4.2, 10.6]", "56 [52, 63]")
Test <- c("Mean NPQ (sd)", "Median HC Pairs (IQR)")
all_pre_scores <- data.frame(cbind(Test, Value))
all_pre_scores |> kable(booktabs=T,linesep="", row.names=FALSE, caption = "Pretest Score Values (N = 139)") |> kable_styling(latex_options="HOLD_position")
## Create tables for comfort level, method, and practitioner recommendations in relation to chronic pain for cohort with pre/post values ##
# mean and sd comfort treating chronic pain
comfort_sum_pre_post <- c(mean(pre_post$treating_chronic_pain.x, na.rm=TRUE), mean(pre_post$treating_chronic_pain.x, na.rm=TRUE)-sd(pre_post$treating_chronic_pain.x, na.rm=TRUE), mean(pre_post$treating_chronic_pain.x, na.rm=TRUE)+sd(pre_post$treating_chronic_pain.x, na.rm=TRUE))
# get counts of treatment preferences --> corresponds to columns 17-33 & 205-221
pre_post[,c(17:33, 205:221)] <- lapply(pre_post[,c(17:33, 205:221)], as.factor)
# pre rankings
# summary(pre_post[,c(17:33)])
# post rankings
# summary(pre_post[,c(205:221)])
## Note that there were less than a handful of respondents for preferred treatment type in the post-survey, so we refrain from making a comparison table.
# 3 treatments most commonly ranked first
treatment1_pre <- c("Physical Therapy (23, 50.0%)", "Pain Clinic (7, 15.2%)", "Muscle Relaxant Medication (4, 8.7%)")
treatment1_post <- c("Physical Therapy (18, 39.1%)", "Pain Clinic (11, 23.9%)", "Cognitive Behaviorial Therapy (5, 10.9%)")
rank1_pre_post <- data.frame(cbind(treatment1_pre, treatment1_post))
colnames(rank1_pre_post) <- c("Pre", "Post")
rank1_pre_post |> kable(booktabs=T,linesep="", row.names=FALSE, caption = "Pre-Post Comparison of Treatments Most Commonly Ranked First (N = 46)") |> kable_styling(latex_options="HOLD_position")
# 3 treatments most commonly ranked second
treatment2_pre <- c("Pain Clinic (6, 13.0%)", "Cognitive Behavioral Therapy (6, 13.0%)", "Physical Therapy (5, 10.9%)")
treatment2_post <- c("Physical Therapy (11, 23.9%)", "Cognitive Behavioral Therapy (7, 15.2%)", "Pain Clinic (6, 13.0%)")
rank2_pre_post <- data.frame(cbind(treatment2_pre, treatment2_post))
colnames(rank2_pre_post) <- c("Pre", "Post")
rank2_pre_post |> kable(booktabs=T,linesep="", row.names=FALSE, caption = "Pre-Post Comparison of Treatments Most Commonly Ranked Second (N = 46)") |> kable_styling(latex_options="HOLD_position")
# 3 treatments most commonly ranked third
treatment3_pre <- c("Muscle Relaxant Medication (8, 17.4%)", "Pain Clinic (6, 13.0%)", "Pain Injections (i.e., epidural) (5, 10.9%)")
treatment3_post <- c("Pain Clinic (8, 17.4%)", "Cognitive Behavioral Therapy (6, 13.0%)", "Physical Therapy (5, 10.9%)")
rank3_pre_post <- data.frame(cbind(treatment3_pre, treatment3_post))
colnames(rank3_pre_post) <- c("Pre", "Post")
rank3_pre_post |> kable(booktabs=T,linesep="", row.names=FALSE, caption = "Pre-Post Comparison of Treatments Most Commonly Ranked Third (N = 46)") |> kable_styling(latex_options="HOLD_position")
# 3 treatments most commonly chosen --> pt (31, 67.4%), clinic (19, 41.3%), flexoril (17, 37.0%)
treatment_comm_pre <- c("Physical Therapy (31, 67.4%)", "Pain Clinic (19, 41.3%)", "Muscle Relaxant Medication (17, 37.0%)")
treatment_comm_post <- c("Physical Therapy (34, 73.9%)", "Pain Clinic (25, 54.3%)", "Cognitive Behavioral Therapy (18, 39.1%)")
comms_pre_post <- data.frame(cbind(treatment_comm_pre, treatment_comm_post))
colnames(comms_pre_post) <- c("Pre", "Post")
comms_pre_post |> kable(booktabs=T,linesep="", row.names=FALSE, caption = " Pre-Post Comparison of Most Frequently Selected Treatments (N = 46)") |> kable_styling(latex_options="HOLD_position")
# get rankings of professional preferences --> corresponds to columns 34-43 & 222-231
pre_post[,c(34:43, 222:231)] <- lapply(pre_post[,c(34:43, 222:231)], as.numeric)
# Calculate column means
means_pre_post <- cbind(colMeans(pre_post[,c(34:43)], na.rm = TRUE), colMeans(pre_post[,c(222:231)], na.rm = TRUE))
# Create a data frame with column means
prof_scores_pre_post <- data.frame(means_pre_post)
# Sort the data frame by column means in decreasing order
colnames(prof_scores_pre_post) <- c("Pre","Post")
prof_scores_pre_post[,c(1:2)] <- round(prof_scores_pre_post[,c(1:2)], 2)
rownames(prof_scores_pre_post) <- c("Family Medicine", "Orthopedic Surgery", "Psychology", "Physical Therapy", "Occupational Therapy", "Nurse Practitioners", "Chiropractic", "Physicians Assistants", "Pain Management Specialist", "Massage Therapist")
prof_scores_pre_post |> kable(booktabs=T,linesep="", row.names=TRUE, caption = "Pre-Post Comparison of Average Ability to Assess and Treat Chronic Pain by Profession (0 = Not recommended - 10 = Highly recommended)") |> kable_styling(latex_options="HOLD_position")
## NPQ Scores (score 0 - 12) ##
# Recode columns 5, 6, 7, and 13 for True values
no_pre[, c(47, 48, 49, 55)] <- lapply(no_pre[, c(47, 48, 49, 55)], function(x) {
ifelse(x == 1, 1, 0)
})
# Recode remaining columns for False values
no_pre[, c(44, 45, 46, 50:54)] <- lapply(no_pre[, c(44, 45, 46, 50:54)], function(x) {
ifelse(x == 2, 1, 0)
})
# Impute NA values as 0 since we are deeming it to be an "unsure" response
no_pre[, 44:55][is.na(no_pre[, 44:55])] <- 0
# get scores
no_pre$npq_pre_score <- rowSums(no_pre[,c(44:55)])
## HCPairs (score 15 - 105) ##
# impute missing values with middle value
for (col in 56:70) {
col_med <- median(total_pre[, col], na.rm = TRUE)  # Calculate column mean, ignoring NA values
total_pre[is.na(total_pre[, col]), col] <- col_med  # Replace NA values with column mean
}
# get scores
total_pre$hc_pre_score <- rowSums(total_pre[,c(56:70)])
# make summary table for scores
Value <- c("7.42 [4.2, 10.6]", "56 [52, 63]")
Test <- c("Mean NPQ (sd)", "Median HC Pairs (IQR)")
all_pre_scores <- data.frame(cbind(Test, Value))
all_pre_scores |> kable(booktabs=T,linesep="", row.names=FALSE, caption = "Pretest Score Values (N = 139)") |> kable_styling(latex_options="HOLD_position")
## Create tables for comfort level, method, and practitioner recommendations in relation to chronic pain for cohort with pre/post values ##
# mean and sd comfort treating chronic pain
comfort_sum_pre_post <- c(mean(pre_post$treating_chronic_pain.x, na.rm=TRUE), mean(pre_post$treating_chronic_pain.x, na.rm=TRUE)-sd(pre_post$treating_chronic_pain.x, na.rm=TRUE), mean(pre_post$treating_chronic_pain.x, na.rm=TRUE)+sd(pre_post$treating_chronic_pain.x, na.rm=TRUE))
# get counts of treatment preferences --> corresponds to columns 17-33 & 205-221
pre_post[,c(17:33, 205:221)] <- lapply(pre_post[,c(17:33, 205:221)], as.factor)
# pre rankings
# summary(pre_post[,c(17:33)])
# post rankings
# summary(pre_post[,c(205:221)])
## Note that there were less than a handful of respondents for preferred treatment type in the post-survey, so we refrain from making a comparison table.
# 3 treatments most commonly ranked first
treatment1_pre <- c("Physical Therapy (23, 50.0%)", "Pain Clinic (7, 15.2%)", "Muscle Relaxant Medication (4, 8.7%)")
treatment1_post <- c("Physical Therapy (18, 39.1%)", "Pain Clinic (11, 23.9%)", "Cognitive Behaviorial Therapy (5, 10.9%)")
rank1_pre_post <- data.frame(cbind(treatment1_pre, treatment1_post))
colnames(rank1_pre_post) <- c("Pre", "Post")
rank1_pre_post |> kable(booktabs=T,linesep="", row.names=FALSE, caption = "Pre-Post Comparison of Treatments Most Commonly Ranked First (N = 46)") |> kable_styling(latex_options="HOLD_position")
# 3 treatments most commonly ranked second
treatment2_pre <- c("Pain Clinic (6, 13.0%)", "Cognitive Behavioral Therapy (6, 13.0%)", "Physical Therapy (5, 10.9%)")
treatment2_post <- c("Physical Therapy (11, 23.9%)", "Cognitive Behavioral Therapy (7, 15.2%)", "Pain Clinic (6, 13.0%)")
rank2_pre_post <- data.frame(cbind(treatment2_pre, treatment2_post))
colnames(rank2_pre_post) <- c("Pre", "Post")
rank2_pre_post |> kable(booktabs=T,linesep="", row.names=FALSE, caption = "Pre-Post Comparison of Treatments Most Commonly Ranked Second (N = 46)") |> kable_styling(latex_options="HOLD_position")
# 3 treatments most commonly ranked third
treatment3_pre <- c("Muscle Relaxant Medication (8, 17.4%)", "Pain Clinic (6, 13.0%)", "Pain Injections (i.e., epidural) (5, 10.9%)")
treatment3_post <- c("Pain Clinic (8, 17.4%)", "Cognitive Behavioral Therapy (6, 13.0%)", "Physical Therapy (5, 10.9%)")
rank3_pre_post <- data.frame(cbind(treatment3_pre, treatment3_post))
colnames(rank3_pre_post) <- c("Pre", "Post")
rank3_pre_post |> kable(booktabs=T,linesep="", row.names=FALSE, caption = "Pre-Post Comparison of Treatments Most Commonly Ranked Third (N = 46)") |> kable_styling(latex_options="HOLD_position")
# 3 treatments most commonly chosen --> pt (31, 67.4%), clinic (19, 41.3%), flexoril (17, 37.0%)
treatment_comm_pre <- c("Physical Therapy (31, 67.4%)", "Pain Clinic (19, 41.3%)", "Muscle Relaxant Medication (17, 37.0%)")
treatment_comm_post <- c("Physical Therapy (34, 73.9%)", "Pain Clinic (25, 54.3%)", "Cognitive Behavioral Therapy (18, 39.1%)")
comms_pre_post <- data.frame(cbind(treatment_comm_pre, treatment_comm_post))
colnames(comms_pre_post) <- c("Pre", "Post")
comms_pre_post |> kable(booktabs=T,linesep="", row.names=FALSE, caption = " Pre-Post Comparison of Most Frequently Selected Treatments (N = 46)") |> kable_styling(latex_options="HOLD_position")
# get rankings of professional preferences --> corresponds to columns 34-43 & 222-231
pre_post[,c(34:43, 222:231)] <- lapply(pre_post[,c(34:43, 222:231)], as.numeric)
# Calculate column means
means_pre_post <- cbind(colMeans(pre_post[,c(34:43)], na.rm = TRUE), colMeans(pre_post[,c(222:231)], na.rm = TRUE))
# Create a data frame with column means
prof_scores_pre_post <- data.frame(means_pre_post)
# Sort the data frame by column means in decreasing order
colnames(prof_scores_pre_post) <- c("Pre","Post")
prof_scores_pre_post[,c(1:2)] <- round(prof_scores_pre_post[,c(1:2)], 2)
rownames(prof_scores_pre_post) <- c("Family Medicine", "Orthopedic Surgery", "Psychology", "Physical Therapy", "Occupational Therapy", "Nurse Practitioners", "Chiropractic", "Physicians Assistants", "Pain Management Specialist", "Massage Therapist")
prof_scores_pre_post |> kable(booktabs=T,linesep="", row.names=TRUE, caption = "Pre-Post Comparison of Average Ability to Assess and Treat Chronic Pain by Profession (0 = Not recommended - 10 = Highly recommended)") |> kable_styling(latex_options="HOLD_position")
## NPQ Scores (score 0 - 12) ##
# Recode columns for True values
no_pre[, c(106, 107, 108, 114)] <- lapply(no_pre[, c(106, 107, 108, 114)], function(x) {
ifelse(x == 1, 1, 0)
})
# Recode remaining columns for False values
no_pre[, c(103:105, 109:113)] <- lapply(no_pre[, c(103:105, 109:113)], function(x) {
ifelse(x == 2, 1, 0)
})
# Impute NA values with most frequent response
# Select the columns you want to impute the median for
columns_to_impute <- c(103:114)
# Impute the median value for each column
no_pre <- no_pre %>%
mutate_at(vars(columns_to_impute), funs(replace(., is.na(.), median(., na.rm = TRUE))))
# get scores
no_pre$npq_score <- data.frame(rowSums(no_pre[, c(103:114)], na.rm=TRUE))
post_df <- cbind(no_pre$npq_score, pre_post$npq_post)
class(pre_post$npq_post)
pre_post$npq_post
## Get pre, post, and overlap data ##
# Note that there are 20 observations with only a post_survey arm, who were not administered the test before the course.  We will include these 20 observations in the 'pre' dataset since this was their first exposure to the survey (i.e., it was still their 'pre' survey even if it's labeled as 'post')
# pre dataset
pre <- data[grepl("pre", data$redcap_event_name), ]
no_pre <- data %>% filter(attendance == 0)
total_pre <- rbind(pre, no_pre)
total_pre$record_id <- 1:nrow(total_pre)
# post dataset
post <- data %>% filter(attendance == 1)
# pre-post dataset
pre_post <- merge(pre, post, by = "record_id")
# Need to impute post-survey values for pre-survey values cols; impute columns 75 - 129 for columns 16 - 70
total_pre[120:139, 16:70] <- total_pre[120:139, 75:129]
## Recode Variables ##
# We now recode some variables for readability and downstream testing / modeling
# recode baseline values
total_pre$provider_status <- ifelse(total_pre$provider_status == 1,"Resident",
ifelse(total_pre$provider_status == 2, "Fellow",
ifelse(total_pre$provider_status == 3, "Attending Physician",
ifelse(total_pre$provider_status == 4, "Other",
ifelse(total_pre$provider_status == 5, "Admin", NA)))))
# female = 1
total_pre$sex <- ifelse(total_pre$sex == 1, 1,
ifelse(total_pre$sex == 2, 0, NA))
# recode race
total_pre$ethnic_background <- ifelse(total_pre$ethnic_background == 1,"African American",
ifelse(total_pre$ethnic_background == 2, "Hispanic",
ifelse(total_pre$ethnic_background == 3, "White, non-Hispanic",
ifelse(total_pre$ethnic_background == 4, "Asian",
ifelse(total_pre$ethnic_background == 5, "Other", NA)))))
# number of each practitioner type & pct
prac_counts <- total_pre %>% group_by(provider_status) %>% summarise(n = n(),
pct = n / nrow(total_pre) * 100)
# number in each ethnicity group & pct
race_counts <- total_pre %>% group_by(ethnic_background) %>% summarise(n = n(),
pct = n / nrow(total_pre) * 100)
# number who'd responded "yes" & pcts
base_sums <- colSums(total_pre[,c(10:14)], na.rm=TRUE)
base_pcts <- c(base_sums[1]/(nrow(total_pre)-22), base_sums[2]/(nrow(total_pre)-20), base_sums[3]/(nrow(total_pre)-20), base_sums[4]/(nrow(total_pre)-20), base_sums[5]/(nrow(total_pre)-20))
# mean and sd reported pt experience
experience_sum <- c(mean(total_pre$pt_experience, na.rm=TRUE), mean(total_pre$pt_experience, na.rm=TRUE)-sd(total_pre$pt_experience, na.rm=TRUE), mean(total_pre$pt_experience, na.rm=TRUE)+sd(total_pre$pt_experience, na.rm=TRUE))
## Create table of demographics only measured in purely 'pre' group ##
# baseline variable summary
base_variables <- c("Female", "Ethnicity", "", "", "", "", "", "Provider Status", "", "", "", "", "", "Currently Experience Pain", "Pain within Past 6 months", "Previously Undergone Surgery", "Friend or Family Experience Chronic Pain", "Previous Experience with PT", "", "Comfort Level Treating Chronic Pain")
base_desc <- c("", "", "White, non-Hispanic", "Asian", "Hispanic", "African American", "Other", "","Resident", "Attending Physician", "Fellow", "Admin", "Other", "", "", "", "", "", "Average Rating", "")
base_values <- c("68 (57.1%)", "", "74 (62.2%)", 33, 5, 3, 2, "", "83 (69.7%)", 22, 11, 2, 1, "45 (38.8%)", "38 (31.9%)", "64 (53.8%)", "71 (59.7%)", "49 (41.2%)", "8.3 [6.5, 10.0]", "5.0 [2.7, 7.4]")
baseline_summary <- data.frame(cbind(base_variables, base_desc, base_values))
colnames(baseline_summary) <- c("Variable", "", "Value (N = 119)")
# create table for 119 respondents who recorded demographic info prior to the course
baseline_summary |> kable(booktabs=T,linesep="", row.names=FALSE, caption = "Baseline Characteristics (N = 119)") |> kable_styling(latex_options=c("striped","HOLD_position"), stripe_index=c(1,3,5,7,9,11,13,15,17,19))
View(pre_post)
## Create tables for comfort level, method, and practitioner recommendations in relation to chronic pain ##
# mean and sd comfort treating chronic pain
comfort_sum <- c(mean(total_pre$treating_chronic_pain, na.rm=TRUE), mean(total_pre$treating_chronic_pain, na.rm=TRUE)-sd(total_pre$treating_chronic_pain, na.rm=TRUE), mean(total_pre$treating_chronic_pain, na.rm=TRUE)+sd(total_pre$treating_chronic_pain, na.rm=TRUE))
# get counts of treatment preferences --> corresponds to columns 17-33
total_pre[,c(17:33)] <- lapply(total_pre[,c(17:33)], as.factor)
# summary(total_pre[,c(17:33)])
# 3 treatments most commonly ranked first --> pt (75, 54.0%), clinic (23, 16.5%), flexoril (8, 5.8%)
treatment1 <- c("Physical Therapy", "Pain Clinic", "Muscle Relaxant Medication")
value1 <- c("75 (63.0%)", "23 (19.3%)", "8 (6.7%)")
rank1 <- data.frame(cbind(treatment1, value1))
colnames(rank1) <- c("Treatment", "n (%)")
rank1 |> kable(booktabs=T,linesep="", row.names=FALSE, caption = "Pre-Lecture Treatments Most Commonly Ranked First (N = 119)") |> kable_styling(latex_options="HOLD_position")
# 3 treatments most commonly ranked second --> pt (25, 18.0%), clinic (23, 16.5%), esi (16, 11.5%)
treatment2 <- c("Physical Therapy", "Pain Clinic", "Pain Injections (i.e., epidural)")
value2 <- c("25 (21.0%)", "23 (19.3%)", "16 (13.4%)")
rank2 <- data.frame(cbind(treatment2, value2))
colnames(rank2) <- c("Treatment", "n (%)")
rank2 |> kable(booktabs=T,linesep="", row.names=FALSE, caption = "Pre-Lecture Treatments Most Commonly Ranked Second (N = 119)") |> kable_styling(latex_options="HOLD_position")
# 3 treatments most commonly ranked third --> clinic (21, 15.1%), flexoril (19, 13.7%), narcotic (16, 11.5%)
treatment3 <- c("Pain Clinic", "Muscle Relaxant Medication", "Narcotic Pain Medication")
value3 <- c("21 (17.6%)", "19 (16.0%)", "16 (13.4%)")
rank3 <- data.frame(cbind(treatment3, value3))
colnames(rank3) <- c("Treatment", "n (%)")
rank3 |> kable(booktabs=T,linesep="", row.names=FALSE, caption = "Pre-Lecture Treatments Most Commonly Ranked Third (N = 119)") |> kable_styling(latex_options="HOLD_position")
# 3 treatments most commonly chosen --> pt (88, 63.3%), clinic (47, 33.8%), flexoril (21, 15.1%)
treatment_comm <- c("Physical Therapy", "Pain Clinic", "Muscle Relaxant Medication")
value_comm <- c("88 (73.9%)", "47 (39.5%)", "21 (17.6%)")
comms <- data.frame(cbind(treatment_comm, value_comm))
colnames(comms) <- c("Treatment", "n (%)")
comms |> kable(booktabs=T,linesep="", row.names=FALSE, caption = "Pre-Lecture Most Frequently Selected Treatments (N = 119)") |> kable_styling(latex_options="HOLD_position")
# get rankings of professional preferences --> corresponds to columns 34-43
total_pre[,c(34:43)] <- lapply(total_pre[,c(34:43)], as.numeric)
# Calculate column means
means <- colMeans(total_pre[, c(34:43)], na.rm = TRUE)
# Create a data frame with column means
prof_scores <- data.frame(means)
# Sort the data frame by column means in decreasing order
prof_scores <- prof_scores[order(-means), , drop = FALSE]
colnames(prof_scores) <- c("Mean Ranking")
prof_scores$`Mean Ranking` <- round(prof_scores$`Mean Ranking`, 2)
rownames(prof_scores) <- c("Pain Management Specialist", "Physical Therapy", "Occupational Therapy", "Family Medicine", "Orthopedic Surgery", "Psychology", "Massage Therapists", "Physician Assistants", "Nurse Practitioners", "Chiropractic")
prof_scores |> kable(booktabs=T,linesep="", row.names=TRUE, caption = "Pre-Lecture Average Ability to Assess and Treat Chronic Pain by Profession (0 = Not recommended - 10 = Highly recommended)") |> kable_styling(latex_options="HOLD_position")
## Create tables for comfort level, method, and practitioner recommendations in relation to chronic pain for cohort with pre/post values ##
# mean and sd comfort treating chronic pain
comfort_sum_pre_post <- c(mean(pre_post$treating_chronic_pain.x, na.rm=TRUE), mean(pre_post$treating_chronic_pain.x, na.rm=TRUE)-sd(pre_post$treating_chronic_pain.x, na.rm=TRUE), mean(pre_post$treating_chronic_pain.x, na.rm=TRUE)+sd(pre_post$treating_chronic_pain.x, na.rm=TRUE))
# get counts of treatment preferences --> corresponds to columns 17-33 & 205-221
pre_post[,c(17:33, 205:221)] <- lapply(pre_post[,c(17:33, 205:221)], as.factor)
# pre rankings
# summary(pre_post[,c(17:33)])
# post rankings
# summary(pre_post[,c(205:221)])
## Note that there were less than a handful of respondents for preferred treatment type in the post-survey, so we refrain from making a comparison table.
# 3 treatments most commonly ranked first
treatment1_pre <- c("Physical Therapy (23, 50.0%)", "Pain Clinic (7, 15.2%)", "Muscle Relaxant Medication (4, 8.7%)")
treatment1_post <- c("Physical Therapy (18, 39.1%)", "Pain Clinic (11, 23.9%)", "Cognitive Behaviorial Therapy (5, 10.9%)")
rank1_pre_post <- data.frame(cbind(treatment1_pre, treatment1_post))
colnames(rank1_pre_post) <- c("Pre", "Post")
rank1_pre_post |> kable(booktabs=T,linesep="", row.names=FALSE, caption = "Pre-Post Comparison of Treatments Most Commonly Ranked First (N = 46)") |> kable_styling(latex_options="HOLD_position")
# 3 treatments most commonly ranked second
treatment2_pre <- c("Pain Clinic (6, 13.0%)", "Cognitive Behavioral Therapy (6, 13.0%)", "Physical Therapy (5, 10.9%)")
treatment2_post <- c("Physical Therapy (11, 23.9%)", "Cognitive Behavioral Therapy (7, 15.2%)", "Pain Clinic (6, 13.0%)")
rank2_pre_post <- data.frame(cbind(treatment2_pre, treatment2_post))
colnames(rank2_pre_post) <- c("Pre", "Post")
rank2_pre_post |> kable(booktabs=T,linesep="", row.names=FALSE, caption = "Pre-Post Comparison of Treatments Most Commonly Ranked Second (N = 46)") |> kable_styling(latex_options="HOLD_position")
# 3 treatments most commonly ranked third
treatment3_pre <- c("Muscle Relaxant Medication (8, 17.4%)", "Pain Clinic (6, 13.0%)", "Pain Injections (i.e., epidural) (5, 10.9%)")
treatment3_post <- c("Pain Clinic (8, 17.4%)", "Cognitive Behavioral Therapy (6, 13.0%)", "Physical Therapy (5, 10.9%)")
rank3_pre_post <- data.frame(cbind(treatment3_pre, treatment3_post))
colnames(rank3_pre_post) <- c("Pre", "Post")
rank3_pre_post |> kable(booktabs=T,linesep="", row.names=FALSE, caption = "Pre-Post Comparison of Treatments Most Commonly Ranked Third (N = 46)") |> kable_styling(latex_options="HOLD_position")
# 3 treatments most commonly chosen --> pt (31, 67.4%), clinic (19, 41.3%), flexoril (17, 37.0%)
treatment_comm_pre <- c("Physical Therapy (31, 67.4%)", "Pain Clinic (19, 41.3%)", "Muscle Relaxant Medication (17, 37.0%)")
treatment_comm_post <- c("Physical Therapy (34, 73.9%)", "Pain Clinic (25, 54.3%)", "Cognitive Behavioral Therapy (18, 39.1%)")
comms_pre_post <- data.frame(cbind(treatment_comm_pre, treatment_comm_post))
colnames(comms_pre_post) <- c("Pre", "Post")
comms_pre_post |> kable(booktabs=T,linesep="", row.names=FALSE, caption = " Pre-Post Comparison of Most Frequently Selected Treatments (N = 46)") |> kable_styling(latex_options="HOLD_position")
# get rankings of professional preferences --> corresponds to columns 34-43 & 222-231
pre_post[,c(34:43, 222:231)] <- lapply(pre_post[,c(34:43, 222:231)], as.numeric)
# Calculate column means
means_pre_post <- cbind(colMeans(pre_post[,c(34:43)], na.rm = TRUE), colMeans(pre_post[,c(222:231)], na.rm = TRUE))
# Create a data frame with column means
prof_scores_pre_post <- data.frame(means_pre_post)
# Sort the data frame by column means in decreasing order
colnames(prof_scores_pre_post) <- c("Pre","Post")
prof_scores_pre_post[,c(1:2)] <- round(prof_scores_pre_post[,c(1:2)], 2)
rownames(prof_scores_pre_post) <- c("Family Medicine", "Orthopedic Surgery", "Psychology", "Physical Therapy", "Occupational Therapy", "Nurse Practitioners", "Chiropractic", "Physicians Assistants", "Pain Management Specialist", "Massage Therapist")
prof_scores_pre_post |> kable(booktabs=T,linesep="", row.names=TRUE, caption = "Pre-Post Comparison of Average Ability to Assess and Treat Chronic Pain by Profession (0 = Not recommended - 10 = Highly recommended)") |> kable_styling(latex_options="HOLD_position")
rank1_pre_post
summary(pre_post[,c(17:33)])
sun(pre_post[pre_post$narcotic.x==1,])
sum(pre_post[pre_post$narcotic.x==1,])
sum(pre_post[as.numeric(pre_post$narcotic.x==1,]))
sum(pre_post[as.numeric(pre_post$narcotic.x==1,)])
pre_post$narcotic.x==1
sum(pre_post$narcotic.x==1)
sum(pre_post$narcotic.x==1, na.rm==TRUE)
sum(pre_post$narcotic.x==1, na.action = na.omit)
colSums(pre_post$narcotic.x==1, na.rm==TRUE)
colSums(as.numeric(pre_post$narcotic.x==1), na.rm==TRUE)
class(pre_post$narcotic.x)
sum(pre_post$narcotic.x==1)
sum(pre_post$narcotic.x==1, na.rm=TRUE)
t.test(sum(pre_post$narcotic.x==1, na.rm=TRUE), sum(pre_post$narcotic.y==1, na.rm=TRUE))
t.test(sum(pre_post$physical_therapy.x==1, na.rm=TRUE), sum(pre_post$physical_therapy.y==1, na.rm=TRUE))
sum(pre_post$physical_therapy.x==1, na.rm=TRUE)
summary(pre_post[,c(17:33)])
View(comfort_sum_pre_post)
t.test(mean(pre_post$physical_therapy.x, na.rm=TRUE), mean(pre_post$physical_therapy.y, na.rm=TRUE))
mean(pre_post$physical_therapy.x, na.rm=TRUE)
mean(pre_post$physical_therapy.y, na.rm=TRUE)
pre_post$physical_therapy.y
mean(pre_post$physical_therapypost.y, na.rm=TRUE)
t.test(mean(pre_post$physical_therapy.x, na.rm=TRUE), mean(pre_post$physical_therapypost.y, na.rm=TRUE))
knitr::opts_chunk$set(echo = TRUE)
# load required libraries
library(tidyverse)
library(ggplot2)
library(Hmisc)
library(dplyr)
library(kableExtra)
library(pwr)
library(zoo)
library(effsize)
# set wd
setwd("~/Desktop/EIM/Spring 2024/Practitioner_Type/PNE for Medical Residents")
# read data
data <- read.csv('./PainNeuroscienceForM_DATA_2024-02-14_2004.csv')
# set labels
#Setting Labels
label(data$record_id)="Record ID"
label(data$redcap_event_name)="Event Name"
label(data$redcap_survey_identifier)="Survey Identifier"
label(data$presurvey_timestamp)="Survey Timestamp"
label(data$age)="What is your current age?"
label(data$provider_status)="What is your current role?"
label(data$sex)="Sex"
label(data$ethnic_background)="What is your ethnic background?"
label(data$ethnic_other)="Please specify your ethnic background"
label(data$experience_pain)="Do you currently experience pain?"
label(data$pain_more_than_6_mo)="Have you ever experienced pain lasting more than 6 months? "
label(data$surgery)="Have you ever undergone surgery? "
label(data$close_friend)="Do you have a close friend or family member that experiences chronic pain? "
label(data$pt)="Have you ever received care from a physical therapist (PT) as a patient? "
label(data$pt_experience)="If yes, how would you rate your experience?"
label(data$treating_chronic_pain)="How comfortable do you feel treating patients with chronic pain?"
label(data$narcotic)="Narcotic pain medication"
label(data$massage)="Massage therapy"
label(data$stim)="Spinal cord stimulator"
label(data$surg)="Surgery"
label(data$antidepressant)="Anti-depressant medication"
label(data$chiro)="Chiropractic"
label(data$flexoril)="Muscle relaxant medication"
label(data$esi)="Pain injections (i.e., epidural)"
label(data$psych)="Psychology"
label(data$clinic)="Pain clinic"
label(data$phys_ther)="Physical therapy"
label(data$aquatic)="Aquatic therapy"
label(data$cbt)="Cognitive behavioral therapy"
label(data$meditation)="Meditation"
label(data$sleep)="Sleep study"
label(data$nutrition)="Nutrition"
label(data$ot)="Occupational therapy"
label(data$family_medicine)="Family medicine"
label(data$orthopedic_surgery)="Orthopedic surgery"
label(data$psychology)="Psychology"
label(data$physical_therapy)="Physical therapy"
label(data$occupational_therapy)="Occupational therapy"
label(data$nurse_practitioners)="Nurse practitioners"
label(data$chiropractic)="Chiropractic"
label(data$physician_assistants)="Physician assistants"
label(data$pain_management_specialist)="Pain management specialists"
label(data$massage_therapists)="Massage therapists"
label(data$it_is_possible_to_have_pai)="It is possible to have pain and not know about it."
label(data$when_part_of_your_body_is)="When part of your body is injured, special pain receptors convey the pain message to your brain."
label(data$pain_only_occurs_when_you)="Pain only occurs when you are injured or at risk of being injured."
label(data$when_you_are_injured_speci)="When you are injured, special receptors convey the danger message to your spinal cord."
label(data$special_nerves_in_your_spi)="Special nerves in your spinal cord convey danger message to your brain."
label(data$nerves_adapt_by_increasing)="Nerves adapt by increasing their resting level of excitement."
label(data$chronic_pain_means_that_an)="Chronic pain means that an injury hasnt healed properly."
label(data$worse_injuries_always_resu)="Worse injuries always result in worse pain."
label(data$descending_neurons_are_alw)="Descending neurons are always inhibitory."
label(data$pain_occurs_whenever_you_a)="Pain occurs whenever you are injured."
label(data$when_you_injure_yourself_t)="When you injure yourself, the environment that you are in will not affect the amount of pain you experience, as long as the injury is exactly the same."
label(data$the_brain_decides_when_you)="The brain decides when you will experience pain."
label(data$responsibilities)="Patients with chronic pain can still be expected to fulfill work and family responsibilities despite pain."
label(data$stop_activity)="An increase in pain is an indicator that a patient with chronic pain should stop what he is doing until the pain decreases."
label(data$normal_life)="Patients with chronic pain cannot go about normal life activities when they are in pain."
label(data$active)="If their pain went away, patients with chronic pain would be every bit as active as they used to be."
label(data$benefit)="Patients with chronic pain should have the same benefits as the handicapped because of their chronic pain problems."
label(data$perform_usual)="Patients with chronic pain owe it to themselves and those around them to perform their usual activities even when their pain is bad."
label(data$expect_too_much)="Most people expect too much of patients with chronic pain, given their pain."
label(data$careful)="Patients with chronic pain have to be careful not to do anything that might make their pain worse."
label(data$never_able)="As long as they are in pain, patients with chronic pain will never be able to live as well as they did before."
label(data$concentrate)="When their pain gets worse, patients with chronic pain find it very hard to concentrate on anything else."
label(data$acceptance)="Patients with chronic pain must accept that they are disabled persons, due to their chronic pain."
label(data$cure)="There is no way that patients with chronic pain can return to doing the things that they used to do unless they first find a cure for their pain."
label(data$thinking)="Patients with chronic pain find themselves frequently thinking about their pain and what it has done to their life."
label(data$distraction)="Even though their pain is always there, patients with chronic pain often dont notice it at all when they are keeping themselves busy."
label(data$solved)="All of patients with chronic pain problems would be solved if their pain would go away."
label(data$presurvey_complete)="Complete?"
label(data$postsurvey_timestamp)="Survey Timestamp"
label(data$attendance)="Did you attend the GME Grand Rounds in person or online on September 14, 2023?  (Even if you did not attend, your perspectives are highly valuable, so we encourage your to complete this survey!)"
label(data$how_attend)="How did you attend GME Grand Rounds?"
label(data$treating_chronic_painpost)="How comfortable do you feel treating patients with chronic pain?"
label(data$narcoticpost)="Narcotic pain medication"
label(data$massagepost)="Massage therapy"
label(data$stimpost)="Spinal cord stimulator"
label(data$surgpost)="Surgery"
label(data$antidepressantpost)="Anti-depressant medication"
label(data$chiropost)="Chiropractic"
label(data$flexorilpost)="Muscle relaxant medication"
label(data$esipost)="Pain injections (i.e., epidural)"
label(data$psychpost)="Psychology"
label(data$clinicpost)="Pain clinic"
label(data$phys_therpost)="Physical therapy"
label(data$aquaticpost)="Aquatic therapy"
label(data$cbtpost)="Cognitive behavioral therapy"
label(data$meditationpost)="Meditation"
label(data$sleeppost)="Sleep study"
label(data$nutritionpost)="Nutrition"
label(data$otpost)="Occupational therapy"
label(data$family_medicinepost)="Family medicine"
label(data$orthopedic_surgerypost)="Orthopedic surgery"
label(data$psychologypost)="Psychology"
label(data$physical_therapypost)="Physical therapy"
label(data$occupational_therapypost)="Occupational therapy"
label(data$nurse_practitionerspost)="Nurse practitioners"
label(data$chiropracticpost)="Chiropractic"
label(data$physician_assistantspost)="Physician assistants"
label(data$pain_management_specialistpost)="Pain management specialists"
label(data$massage_therapistspost)="Massage therapists"
label(data$it_is_possible_to_have_paipost)="It is possible to have pain and not know about it."
label(data$when_part_of_your_body_ispost)="When part of your body is injured, special pain receptors convey the pain message to your brain."
label(data$pain_only_occurs_when_youpost)="Pain only occurs when you are injured or at risk of being injured."
label(data$when_you_are_injured_specipost)="When you are injured, special receptors convey the danger message to your spinal cord."
label(data$special_nerves_in_your_spipost)="Special nerves in your spinal cord convey danger message to your brain."
label(data$nerves_adapt_by_increasingpost)="Nerves adapt by increasing their resting level of excitement."
label(data$chronic_pain_means_that_anpost)="Chronic pain means that an injury hasnt healed properly."
label(data$worse_injuries_always_resupost)="Worse injuries always result in worse pain."
label(data$descending_neurons_are_alwpost)="Descending neurons are always inhibitory."
label(data$pain_occurs_whenever_you_apost)="Pain occurs whenever you are injured."
label(data$when_you_injure_yourself_tpost)="When you injure yourself, the environment that you are in will not affect the amount of pain you experience, as long as the injury is exactly the same."
label(data$the_brain_decides_when_youpost)="The brain decides when you will experience pain."
label(data$responsibilitiespost)="Patients with chronic pain can still be expected to fulfill work and family responsibilities despite pain."
label(data$stop_activitypost)="An increase in pain is an indicator that a patient with chronic pain should stop what he is doing until the pain decreases."
label(data$normal_lifepost)="Patients with chronic pain cannot go about normal life activities when they are in pain."
label(data$activepost)="If their pain went away, patients with chronic pain would be every bit as active as they used to be."
label(data$benefitpost)="Patients with chronic pain should have the same benefits as the handicapped because of their chronic pain problems."
label(data$perform_usualpost)="Patients with chronic pain owe it to themselves and those around them to perform their usual activities even when their pain is bad."
label(data$expect_too_muchpost)="Most people expect too much of patients with chronic pain, given their pain."
label(data$carefulpost)="Patients with chronic pain have to be careful not to do anything that might make their pain worse."
label(data$never_ablepost)="As long as they are in pain, patients with chronic pain will never be able to live as well as they did before."
label(data$concentratepost)="When their pain gets worse, patients with chronic pain find it very hard to concentrate on anything else."
label(data$acceptancepost)="Patients with chronic pain must accept that they are disabled persons, due to their chronic pain."
label(data$curepost)="There is no way that patients with chronic pain can return to doing the things that they used to do unless they first find a cure for their pain."
label(data$thinkingpost)="Patients with chronic pain find themselves frequently thinking about their pain and what it has done to their life."
label(data$distractionpost)="Even though their pain is always there, patients with chronic pain often dont notice it at all when they are keeping themselves busy."
label(data$solvedpost)="All of patients with chronic pain problems would be solved if their pain would go away."
label(data$postsurvey_complete)="Complete?"
View(data)
mean(data[data$redcap_event_name=='presurvey_arm_1',]$family_medicine, na.rm=TRUE)
mean(data[data$redcap_event_name=='postsurvey_arm_1',]$family_medicine, na.rm=TRUE)
table(data$redcap_event_name)
mean(data[data$redcap_event_name=='postsurvey_arm_1',]$family_medicine, na.rm=TRUE)
mean(data[data$redcap_event_name=='postsurvey_arm_1',]$family_medicinepost, na.rm=TRUE)
t.test(data[data$redcap_event_name=='presurvey_arm_1',]$family_medicine, data[data$redcap_event_name=='postsurvey_arm_1',]$family_medicine)
t.test(data[data$redcap_event_name=='presurvey_arm_1',]$family_medicine, data[data$redcap_event_name=='postsurvey_arm_1',]$family_medicinepost)
t.test(data[data$redcap_event_name=='presurvey_arm_1',]$psychology, data[data$redcap_event_name=='postsurvey_arm_1',]$psychologypost)
hist(data[data$redcap_event_name=='postsurvey_arm_1',]$psychologypost - data[data$redcap_event_name=='presurvey_arm_1',]$psychology)
shapiro.test(data[data$redcap_event_name=='postsurvey_arm_1',]$psychologypost - data[data$redcap_event_name=='presurvey_arm_1',]$psychology)
length(unique(data$record_id))
pre.dat <- data[data$redcap_event_name=='presurvey_arm_1',]
post.dat <- data[data$redcap_event_name=='postsurvey_arm_1',]
View(post.dat)
View(pre.dat)
pre.dat <- data[data$redcap_event_name=='presurvey_arm_1',]$c(1:71)
pre.dat <- data[data$redcap_event_name=='presurvey_arm_1',c(1:71)]
dim(data)
View(data)
post.dat <- data[data$redcap_event_name=='postsurvey_arm_1',c(1,2,72:130)]
dim(pre.dat)
dim(post.dat)
View(post.dat)
View(pre.dat)
pre.dat[,c(44:46,50:54)] <- ifelse(pre.dat[,c(44:46,50:54)]==2,1,0)
View(pre.dat)
pre.dat[,c(47:49,55)] <- ifelse(pre.dat[,c(47:49,55)]==1,1,0)
pre.dat$npq <- rowSums(pre.dat[c(44:55),])
pre.dat <- data[data$redcap_event_name=='presurvey_arm_1',c(1:71)]
pre.dat[c(44:55),] <- lapply(pre.dat[c(44:55),], as.numeric)
class(pre.dat$it_is_possible_to_have_pai)
pre.dat <- data[data$redcap_event_name=='presurvey_arm_1',c(1:71)]
pre.dat[,c(44:55)] <- lapply(pre.dat[,c(44:55)], as.numeric)
pre.dat[,c(44:46,50:54)] <- ifelse(pre.dat[,c(44:46,50:54)]==2,1,0)
pre.dat[,c(47:49,55)] <- ifelse(pre.dat[,c(47:49,55)]==1,1,0)
pre.dat$npq <- rowSums(pre.dat[c(44:55),])
pre.dat$npq <- rowSums(pre.dat[c(44:55),], na.rm=TRUE)
pre.dat$npq <- rowSums(pre.dat[,c(44:55)])
View(pre.dat)
pre.dat$hcpairs <- rowSums(pre.dat[,c(56:70)])
summary(pre.dat$hcpairs)
post.dat[,c(34:45)] <- lapply(post.dat[,c(34:45)], as.numeric)
post.dat[,c(34:36,40:44)] <- ifelse(post.dat[,c(34:36,40:44)]==2,1,0)
post.dat[,c(37:39,45)] <- ifelse(post.dat[,c(37:39,45)]==1,1,0)
post.dat$npq <- rowSums(post.dat[,c(34:45)])
post.dat$hcpairs <- rowSums(post.dat[,c(46:60)])
